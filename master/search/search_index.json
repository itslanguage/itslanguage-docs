{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Welcome This website contains the REST API documentation for ITSLanguage . It's what you need when you're building an integration of ITSLanguage into your backend. In case you're looking for integration of ITSLanguage in your frontend, please take a look at our JS SDK . Improving This Help Just drop us an email .","title":"ITSLanguage Speech API"},{"location":"index.html#welcome","text":"This website contains the REST API documentation for ITSLanguage . It's what you need when you're building an integration of ITSLanguage into your backend. In case you're looking for integration of ITSLanguage in your frontend, please take a look at our JS SDK .","title":"Welcome"},{"location":"index.html#improving-this-help","text":"Just drop us an email .","title":"Improving This Help"},{"location":"api/analyses.html","text":"Analyses Speech analyses can be applied to user submitted audio using the ITSLanguage Speech API. Type Usage pronunciation Compares reference audio to user submitted audio and provides an analysis on phoneme level. Create a pronunciation analysis When creating a pronunciation analysis, the analysis is created as the current user. URL POST /challenges/pronunciation/:challenge/analyses HTTP/1.1 challenge - Required The challenge identifier. Request parameters Name Type Description id string Optional A unique identifier for the analysis. audio blob Required The actual audio. (Ogg Opus or WAV) console string Optional Debugging information supplied by the analysis back-end. pruningLevel int Optional A measurement of how well the alignment process succeeded. Higher values indicate a worse alignment, leading to less reliable measurements per phoneme. score float Optional The overall score of the pronunciation between 0 and 1. Required if words is given. words json Optional A JSON encoded list of analysed words, forming the spoken sentence. Required if score is given. A word is represented as a list of graphemes. Each grapheme contains of the following attributes: Name Type Description graphemes string Required A string containing the assessed graphemes. phonemes object[] Required A list of phonemes found in the assessed grapheme. score float Required The score of the assessed graphemes between 0 and 1. verdict string Required The textual representation of the score. This should be bad , good or moderate . Each phoneme should have the following properties: Name Type Description ipa string Required IPA representation of the analysed graphemes. score float Required The score of the assessed phoneme between 0 and 1. verdict string Required The textual representation of the score. This should be bad , good or moderate . start float Required Starting point offset from the beginning of the audio. end float Required Ending point offset from the beginning of the audio. Request The request should be a multipart/form-data . POST /challenges/pronunciation/test/analyses HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=\"4c1plRsNM5mLpzT7UvYG\" --4c1plRsNM5mLpzT7UvYG Content-Disposition: form-data; name=\"id\" 35 --4c1plRsNM5mLpzT7UvYG Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <audio blob> --4c1plRsNM5mLpzT7UvYG Content-Disposition: form-data; name=\"score\" 0.75 --4c1plRsNM5mLpzT7UvYG Content-Disposition: form-data; name=\"words\" Content-Type: application/json: [ { \"chunks\": [ { \"score\": 0.9, \"verdict\": \"good\", \"graphemes\": \"b\", \"phonemes\": [ { \"ipa\": \"b\", \"score\": 0.9, \"verdict\": \"good\", \"start\": 0.112, \"end\": 0.171 } ] }, { \"score\": 0.4, \"verdict\": \"bad\", \"graphemes\": \"o\", \"phonemes\": [ { \"ipa\": \"\\u0251\", \"score\": 0.4, \"verdict\": \"bad\", \"start\": 0.171, \"end\": 0.227 } ] }, { \"score\": 0.5, \"verdict\": \"moderate\", \"graphemes\": \"x\", \"phonemes\": [ { \"ipa\": \"k\", \"score\": 0.4, \"verdict\": \"bad\", \"start\": 0.227, \"end\": 0.264 }, { \"ipa\": \"s\", \"score\": 0.6, \"verdict\": \"moderate\", \"start\": 0.264, \"end\": 0.339 } ] } ] } ] --4c1plRsNM5mLpzT7UvYG-- Response The analysed audio can be downloaded by opening the audioUrl in the response. HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"35\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.io/challenges/pronunciation/test/analyses/35/audio\", \"userId\": \"24\", \"score\": 0.75, \"words\": [ { \"chunks\": [ { \"score\": 0.9, \"verdict\": \"good\", \"graphemes\": \"b\", \"phonemes\": [ { \"ipa\": \"b\", \"score\": 0.9, \"verdict\": \"good\", \"start\": 0.112, \"end\": 0.171 } ] }, { \"score\": 0.4, \"verdict\": \"bad\", \"graphemes\": \"o\", \"phonemes\": [ { \"ipa\": \"\\u0251\", \"score\": 0.4, \"verdict\": \"bad\", \"start\": 0.171, \"end\": 0.227 } ] }, { \"score\": 0.5, \"verdict\": \"moderate\", \"graphemes\": \"x\", \"phonemes\": [ { \"ipa\": \"k\", \"score\": 0.4, \"verdict\": \"bad\", \"start\": 0.227, \"end\": 0.264 }, { \"ipa\": \"s\", \"score\": 0.6, \"verdict\": \"moderate\", \"start\": 0.264, \"end\": 0.339 } ] } ] } ] } List pronunciation analyses URL GET /challenges/pronunciation/:challenge/analyses HTTP/1.1 challenge - Required The challenge identifier. Request parameters Name Type Description userId string Optional The id of the user that supplied the audio. Request GET /challenges/pronunciation/test/analyses?userId=24 HTTP/1.1 Accept: application/json Response The response is a JSON list with pronunciation analyses of userId '24'. Note The apostrophe in Bob's is included in the graphemes field of the s . When a phoneme represents more than one grapheme like yo in your , they're grouped in the same graphemes field. The c in uncle exists of two phonemes. The score and verdict are shown per phoneme, along with the ipa notation. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"34\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.io/challenges/pronunciation/test/analyses/34/audio\", \"userId\": \"24\", \"score\": 0.75, \"words\": [ { \"chunks\": [ { \"score\": 0.99, \"verdict\": \"good\", \"graphemes\": \"B\", \"phonemes\": [ { \"ipa\": \"b\", \"score\": 0.99, \"verdict\": \"good\", \"start\": 1.07, \"end\": 1.15 } ] }, { \"score\": 0.77, \"verdict\": \"good\", \"graphemes\": \"O\", \"phonemes\": [ { \"ipa\": \"oh\", \"score\": 0.77, \"verdict\": \"good\", \"start\": 1.15, \"end\": 1.22 } ] }, { \"score\": 0.92, \"verdict\": \"good\", \"graphemes\": \"B\", \"phonemes\": [ { \"ipa\": \"b\", \"score\": 0.92, \"verdict\": \"good\", \"start\": 1.22, \"end\": 1.35 } ] }, { \"score\": 0.59, \"verdict\": \"moderate\", \"graphemes\": \"'S\", \"phonemes\": [ { \"ipa\": \"z\", \"score\": 0.59, \"verdict\": \"moderate\", \"start\": 1.35, \"end\": 1.42 } ] } ] } ] }, { \"id\": \"35\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.io/challenges/pronunciation/test/analyses/35/audio\", \"userId\": \"24\", \"score\": 0.75, \"words\": [ { \"chunks\": [ { \"score\": 0.89, \"verdict\": \"good\", \"graphemes\": \"YO\", \"phonemes\": [ { \"ipa\": \"y\", \"score\": 0.89, \"verdict\": \"good\", \"start\": 1.42, \"end\": 1.51 } ] }, { \"score\": 0.48, \"verdict\": \"moderate\", \"graphemes\": \"UR\", \"phonemes\": [ { \"ipa\": \"ao\", \"score\": 0.48, \"verdict\": \"moderate\", \"start\": 1.51, \"end\": 1.61 } ] } ] } ] }, { \"id\": \"36\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.io/challenges/pronunciation/test/analyses/36/audio\", \"userId\": \"24\", \"score\": 0.75, \"words\": [ { \"chunks\": [ { \"score\": 0.81, \"verdict\": \"good\", \"graphemes\": \"U\", \"phonemes\": [ { \"ipa\": \"ah\", \"score\": 0.81, \"verdict\": \"good\", \"start\": 1.61, \"end\": 1.69 } ] }, { \"score\": 0.95, \"verdict\": \"good\", \"graphemes\": \"N\", \"phonemes\": [ { \"ipa\": \"ng\", \"score\": 0.95, \"verdict\": \"good\", \"start\": 1.69, \"end\": 1.74 } ] }, { \"score\": 0.99, \"verdict\": \"good\", \"graphemes\": \"C\", \"phonemes\": [ { \"ipa\": \"k\", \"score\": 0.99, \"verdict\": \"good\", \"start\": 1.74, \"end\": 1.83 }, { \"ipa\": \"ax\", \"score\": 0.94, \"verdict\": \"good\", \"start\": 1.83, \"end\": 1.88 } ] }, { \"score\": 0.97, \"verdict\": \"good\", \"graphemes\": \"LE\", \"phonemes\": [ { \"ipa\": \"l\", \"score\": 0.97, \"verdict\": \"good\", \"start\": 1.88, \"end\": 2.08 } ] } ] } ] } ] Get a single pronunciation analysis URL GET /challenges/pronunciation/:challenge/analyses/:analysis HTTP/1.1 challenge - Required The challenge identifier. analysis - Required The analysis identifier. Request GET /challenges/pronunciation/test/analyses/25 HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"25\", \"updated\": \"2014-02-13T09:37:40Z\", \"created\": \"2014-02-13T09:37:37Z\", \"audioUrl\": \"https://api.itslanguage.io/challenges/pronunciation/test/analyses/25/audio\", \"userId\": \"24\", \"score\": 0.75, \"words\": [ { \"chunks\": [ { \"score\": 0.9, \"verdict\": \"good\", \"graphemes\": \"b\", \"phonemes\": [ { \"ipa\": \"b\", \"score\": 0.9, \"verdict\": \"good\" } ] }, { \"score\": 0.4, \"verdict\": \"bad\", \"graphemes\": \"o\", \"phonemes\": [ { \"ipa\": \"\\u0251\", \"score\": 0.4, \"verdict\": \"bad\" } ] }, { \"score\": 0.5, \"verdict\": \"moderate\", \"graphemes\": \"x\", \"phonemes\": [ { \"ipa\": \"k\", \"score\": 0.4, \"verdict\": \"bad\" }, { \"ipa\": \"s\", \"score\": 0.6, \"verdict\": \"moderate\" } ] } ] } ] }","title":"Speech Analysis"},{"location":"api/analyses.html#analyses","text":"Speech analyses can be applied to user submitted audio using the ITSLanguage Speech API. Type Usage pronunciation Compares reference audio to user submitted audio and provides an analysis on phoneme level.","title":"Analyses"},{"location":"api/analyses.html#create-a-pronunciation-analysis","text":"When creating a pronunciation analysis, the analysis is created as the current user.","title":"Create a pronunciation analysis"},{"location":"api/analyses.html#url","text":"POST /challenges/pronunciation/:challenge/analyses HTTP/1.1 challenge - Required The challenge identifier.","title":"URL"},{"location":"api/analyses.html#request-parameters","text":"Name Type Description id string Optional A unique identifier for the analysis. audio blob Required The actual audio. (Ogg Opus or WAV) console string Optional Debugging information supplied by the analysis back-end. pruningLevel int Optional A measurement of how well the alignment process succeeded. Higher values indicate a worse alignment, leading to less reliable measurements per phoneme. score float Optional The overall score of the pronunciation between 0 and 1. Required if words is given. words json Optional A JSON encoded list of analysed words, forming the spoken sentence. Required if score is given. A word is represented as a list of graphemes. Each grapheme contains of the following attributes: Name Type Description graphemes string Required A string containing the assessed graphemes. phonemes object[] Required A list of phonemes found in the assessed grapheme. score float Required The score of the assessed graphemes between 0 and 1. verdict string Required The textual representation of the score. This should be bad , good or moderate . Each phoneme should have the following properties: Name Type Description ipa string Required IPA representation of the analysed graphemes. score float Required The score of the assessed phoneme between 0 and 1. verdict string Required The textual representation of the score. This should be bad , good or moderate . start float Required Starting point offset from the beginning of the audio. end float Required Ending point offset from the beginning of the audio.","title":"Request parameters"},{"location":"api/analyses.html#request","text":"The request should be a multipart/form-data . POST /challenges/pronunciation/test/analyses HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=\"4c1plRsNM5mLpzT7UvYG\" --4c1plRsNM5mLpzT7UvYG Content-Disposition: form-data; name=\"id\" 35 --4c1plRsNM5mLpzT7UvYG Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <audio blob> --4c1plRsNM5mLpzT7UvYG Content-Disposition: form-data; name=\"score\" 0.75 --4c1plRsNM5mLpzT7UvYG Content-Disposition: form-data; name=\"words\" Content-Type: application/json: [ { \"chunks\": [ { \"score\": 0.9, \"verdict\": \"good\", \"graphemes\": \"b\", \"phonemes\": [ { \"ipa\": \"b\", \"score\": 0.9, \"verdict\": \"good\", \"start\": 0.112, \"end\": 0.171 } ] }, { \"score\": 0.4, \"verdict\": \"bad\", \"graphemes\": \"o\", \"phonemes\": [ { \"ipa\": \"\\u0251\", \"score\": 0.4, \"verdict\": \"bad\", \"start\": 0.171, \"end\": 0.227 } ] }, { \"score\": 0.5, \"verdict\": \"moderate\", \"graphemes\": \"x\", \"phonemes\": [ { \"ipa\": \"k\", \"score\": 0.4, \"verdict\": \"bad\", \"start\": 0.227, \"end\": 0.264 }, { \"ipa\": \"s\", \"score\": 0.6, \"verdict\": \"moderate\", \"start\": 0.264, \"end\": 0.339 } ] } ] } ] --4c1plRsNM5mLpzT7UvYG--","title":"Request"},{"location":"api/analyses.html#response","text":"The analysed audio can be downloaded by opening the audioUrl in the response. HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"35\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.io/challenges/pronunciation/test/analyses/35/audio\", \"userId\": \"24\", \"score\": 0.75, \"words\": [ { \"chunks\": [ { \"score\": 0.9, \"verdict\": \"good\", \"graphemes\": \"b\", \"phonemes\": [ { \"ipa\": \"b\", \"score\": 0.9, \"verdict\": \"good\", \"start\": 0.112, \"end\": 0.171 } ] }, { \"score\": 0.4, \"verdict\": \"bad\", \"graphemes\": \"o\", \"phonemes\": [ { \"ipa\": \"\\u0251\", \"score\": 0.4, \"verdict\": \"bad\", \"start\": 0.171, \"end\": 0.227 } ] }, { \"score\": 0.5, \"verdict\": \"moderate\", \"graphemes\": \"x\", \"phonemes\": [ { \"ipa\": \"k\", \"score\": 0.4, \"verdict\": \"bad\", \"start\": 0.227, \"end\": 0.264 }, { \"ipa\": \"s\", \"score\": 0.6, \"verdict\": \"moderate\", \"start\": 0.264, \"end\": 0.339 } ] } ] } ] }","title":"Response"},{"location":"api/analyses.html#list-pronunciation-analyses","text":"","title":"List pronunciation analyses"},{"location":"api/analyses.html#url_1","text":"GET /challenges/pronunciation/:challenge/analyses HTTP/1.1 challenge - Required The challenge identifier.","title":"URL"},{"location":"api/analyses.html#request-parameters_1","text":"Name Type Description userId string Optional The id of the user that supplied the audio.","title":"Request parameters"},{"location":"api/analyses.html#request_1","text":"GET /challenges/pronunciation/test/analyses?userId=24 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/analyses.html#response_1","text":"The response is a JSON list with pronunciation analyses of userId '24'. Note The apostrophe in Bob's is included in the graphemes field of the s . When a phoneme represents more than one grapheme like yo in your , they're grouped in the same graphemes field. The c in uncle exists of two phonemes. The score and verdict are shown per phoneme, along with the ipa notation. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"34\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.io/challenges/pronunciation/test/analyses/34/audio\", \"userId\": \"24\", \"score\": 0.75, \"words\": [ { \"chunks\": [ { \"score\": 0.99, \"verdict\": \"good\", \"graphemes\": \"B\", \"phonemes\": [ { \"ipa\": \"b\", \"score\": 0.99, \"verdict\": \"good\", \"start\": 1.07, \"end\": 1.15 } ] }, { \"score\": 0.77, \"verdict\": \"good\", \"graphemes\": \"O\", \"phonemes\": [ { \"ipa\": \"oh\", \"score\": 0.77, \"verdict\": \"good\", \"start\": 1.15, \"end\": 1.22 } ] }, { \"score\": 0.92, \"verdict\": \"good\", \"graphemes\": \"B\", \"phonemes\": [ { \"ipa\": \"b\", \"score\": 0.92, \"verdict\": \"good\", \"start\": 1.22, \"end\": 1.35 } ] }, { \"score\": 0.59, \"verdict\": \"moderate\", \"graphemes\": \"'S\", \"phonemes\": [ { \"ipa\": \"z\", \"score\": 0.59, \"verdict\": \"moderate\", \"start\": 1.35, \"end\": 1.42 } ] } ] } ] }, { \"id\": \"35\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.io/challenges/pronunciation/test/analyses/35/audio\", \"userId\": \"24\", \"score\": 0.75, \"words\": [ { \"chunks\": [ { \"score\": 0.89, \"verdict\": \"good\", \"graphemes\": \"YO\", \"phonemes\": [ { \"ipa\": \"y\", \"score\": 0.89, \"verdict\": \"good\", \"start\": 1.42, \"end\": 1.51 } ] }, { \"score\": 0.48, \"verdict\": \"moderate\", \"graphemes\": \"UR\", \"phonemes\": [ { \"ipa\": \"ao\", \"score\": 0.48, \"verdict\": \"moderate\", \"start\": 1.51, \"end\": 1.61 } ] } ] } ] }, { \"id\": \"36\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.io/challenges/pronunciation/test/analyses/36/audio\", \"userId\": \"24\", \"score\": 0.75, \"words\": [ { \"chunks\": [ { \"score\": 0.81, \"verdict\": \"good\", \"graphemes\": \"U\", \"phonemes\": [ { \"ipa\": \"ah\", \"score\": 0.81, \"verdict\": \"good\", \"start\": 1.61, \"end\": 1.69 } ] }, { \"score\": 0.95, \"verdict\": \"good\", \"graphemes\": \"N\", \"phonemes\": [ { \"ipa\": \"ng\", \"score\": 0.95, \"verdict\": \"good\", \"start\": 1.69, \"end\": 1.74 } ] }, { \"score\": 0.99, \"verdict\": \"good\", \"graphemes\": \"C\", \"phonemes\": [ { \"ipa\": \"k\", \"score\": 0.99, \"verdict\": \"good\", \"start\": 1.74, \"end\": 1.83 }, { \"ipa\": \"ax\", \"score\": 0.94, \"verdict\": \"good\", \"start\": 1.83, \"end\": 1.88 } ] }, { \"score\": 0.97, \"verdict\": \"good\", \"graphemes\": \"LE\", \"phonemes\": [ { \"ipa\": \"l\", \"score\": 0.97, \"verdict\": \"good\", \"start\": 1.88, \"end\": 2.08 } ] } ] } ] } ]","title":"Response"},{"location":"api/analyses.html#get-a-single-pronunciation-analysis","text":"","title":"Get a single pronunciation analysis"},{"location":"api/analyses.html#url_2","text":"GET /challenges/pronunciation/:challenge/analyses/:analysis HTTP/1.1 challenge - Required The challenge identifier. analysis - Required The analysis identifier.","title":"URL"},{"location":"api/analyses.html#request_2","text":"GET /challenges/pronunciation/test/analyses/25 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/analyses.html#response_2","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"25\", \"updated\": \"2014-02-13T09:37:40Z\", \"created\": \"2014-02-13T09:37:37Z\", \"audioUrl\": \"https://api.itslanguage.io/challenges/pronunciation/test/analyses/25/audio\", \"userId\": \"24\", \"score\": 0.75, \"words\": [ { \"chunks\": [ { \"score\": 0.9, \"verdict\": \"good\", \"graphemes\": \"b\", \"phonemes\": [ { \"ipa\": \"b\", \"score\": 0.9, \"verdict\": \"good\" } ] }, { \"score\": 0.4, \"verdict\": \"bad\", \"graphemes\": \"o\", \"phonemes\": [ { \"ipa\": \"\\u0251\", \"score\": 0.4, \"verdict\": \"bad\" } ] }, { \"score\": 0.5, \"verdict\": \"moderate\", \"graphemes\": \"x\", \"phonemes\": [ { \"ipa\": \"k\", \"score\": 0.4, \"verdict\": \"bad\" }, { \"ipa\": \"s\", \"score\": 0.6, \"verdict\": \"moderate\" } ] } ] } ] }","title":"Response"},{"location":"api/annotations.html","text":"Annotations Annotations are notes to specific fragments of audio. These annotations can then be classified. Common classifiers are Prompt , Out of Prompt or Error . Annotations are made by users called annotators. They are able to put these annotations on recorded audio. An annotator either has the role of full annotator of base annotator. Base annotators only have a subset of labels available to annotate with. The more senior full annotator can correct the base annotators annotation and has an extended set of labels available. List all annotations A user with the 'ADMIN' role will receive all the annotations. Non-admins will receive only the annotations assigned to them. See below for further filtering options. URL GET /annotations HTTP/1.1 Request parameters The are no request parameters GET /annotations?recording=1 HTTP/1.1 Accept: application/json Filters The following filters may be applied: Name Type Description annotator string The unique identier of the annotator to find the annotations for. assignment string The assignment for which to find the annotations. recording string The speech recording for which to find the annotations. done bool Whether or not and how to filter on the done property. None when all values are allowed, True if only done annotations are desired. False for all not finished annotations. perPage string Amount of annotations to return. startCursor string A previously returned cursor to use as an 'offset'. Response The response is a JSON list with annotations. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\":5646929551687680, \"updated\":\"2018-06-07T13:50:44Z\", \"created\":\"2018-06-07T13:50:44Z\", \"assignment\":4873731453222912, \"doneBase\":null, \"doneFull\":null, \"recording\":{ \"recording\":\"5715999101812736\", \"organisation\":\"aschool\", \"challenge\":\"challenge1\", \"digest\":null, \"tenant\":\"demo\" }, \"audioUrl\":\"https://api.itslanguage.io/download/2257a2f8ada1446bae8d97f591169de9\", \"fragments\":[ { \"start\":5.81, \"labels\":[ { \"comment\":\"\", \"layer\":\"Words\", \"label\":\"speelt\" } ], \"end\":6.45 }, { \"start\":6.67, \"labels\":[ { \"comment\":\"\", \"layer\":\"Words\", \"label\":\"op\" } ], \"end\":7.17 } ] } ] Get a single annotation URL GET /annotation/:annotation HTTP/1.1 annotation - Required The annotation identifier. Request GET /annotation/annotation_1 HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\":5646929551687680, \"updated\":\"2018-06-07T13:50:44Z\", \"created\":\"2018-06-07T13:50:44Z\", \"assignment\":4873731453222912, \"doneBase\":null, \"doneFull\":null, \"recording\":{ \"recording\":\"5715999101812736\", \"organisation\":\"aschool\", \"challenge\":\"challenge1\", \"digest\":null, \"tenant\":\"demo\" }, \"audioUrl\":\"https://api.itslanguage.io/download/2257a2f8ada1446bae8d97f591169de9\", \"fragments\":[ { \"start\":5.81, \"labels\":[ { \"comment\":\"\", \"layer\":\"Words\", \"label\":\"speelt\" } ], \"end\":6.45 }, { \"start\":6.67, \"labels\":[ { \"comment\":\"\", \"layer\":\"Words\", \"label\":\"op\" } ], \"end\":7.17 } ] } Create an annotation URL POST /annotations HTTP/1.1 Accept: application/json Content: application/json { \"annotation\":\"5646929551687680\", \"assignment\":4873731453222912, \"recording\":{ \"recording\":\"5715999101812736\", \"organisation\":\"org1\", \"challenge\":\"challenge1\", \"tenant\":\"demo\" }, \"fragments\":[ { \"start\":0.59, \"end\":1.07, \"labels\":[ { \"layer\":\"Words\", \"label\":\"zon\", \"comment\":\"\" }, { \"layer\":\"OutOfPrompt\", \"label\":\"InsertionUtterance\", \"comment\":\"zo\" } ] }, { \"start\":9.81, \"end\":10.93, \"labels\":[ { \"layer\":\"Words\", \"label\":\"weer.\", \"comment\":\"\" } ] }, ], } Request parameters Parameters should be posted as JSON body. Name Type Description id string Optional The unique identier of the annotation. If none is given, one is generated. doneBase string Optional The datetime this annotation was marked as done by the base annotator. doneFull string Optional The datetime this annotation was marked as done by the full annotator. recording string Required The reference to the recording (type FlatRecordingReference as specified below. assignment string Required The unique identifier of the assignment this annotation is for. fragments list Required The annotated fragments (type Fragment as specified below). The Recording format ( FlatRecordingReference ). All parameters together form the full namespace of one audio recording. Parameters should be posted as JSON body. Name Type Description tenant string Required The unique identier of the tenant. organisation string Required The identifier of the organisation within the tenant namespace. challenge string Required The identifier of the challenge as specified within the organisation.. recording string Required The identifier of the recording as specified within the organisation. The Fragment format: Parameters should be posted as JSON body. Name Type Description start float Required The start point of the fragment, in seconds. end float Required The end point of the fragment, in seconds. labels list Required The labels assigned to this fragment (type Label as specified below). The Label format: Parameters should be posted as JSON body. Name Type Description layer string Required The specifier for the layer (e.g. Words , OutOfPrompt , Error , Noise ). label string Required The specifier of a particular label within a layer (on the Words layer we would expect the word here). comment string Required An optional extra value. Response HTTP/1.1 200 OK Content-Type: application/json { \"updated\":\"2019-04-14T07:55:16Z\", \"created\":\"2018-06-07T13:50:44Z\", \"id\":5646929551687680, \"doneBase\":null, \"doneFull\":null \"assignment\":4873731453222912, \"recording\":{ \"recording\":\"5715999101812736\", \"organisation\":\"org1\", \"challenge\":\"challenge1\", \"digest\":null, \"tenant\":\"demo\" }, \"audioUrl\":\"https://api.itslanguage.io/download/3357a2f8ada1446bae8d97f591169de9\", \"fragments\":[ { \"start\":0.59, \"end\":1.07, \"labels\":[ { \"layer\":\"Words\", \"label\":\"zon\", \"comment\":\"\" }, { \"layer\":\"OutOfPrompt\", \"label\":\"InsertionUtterance\", \"comment\":\"zo\" } ] }, { \"start\":9.81, \"end\":10.93, \"labels\":[ { \"layer\":\"Words\", \"label\":\"weer.\", \"comment\":\"\" } ] } ] } Update an annotation URL PUT /annotations/:annotation HTTP/1.1 annotation - Required The annotation identifier. Update one or more properties of an existing annotation. Request parameters These are exactly as specified in Create an annotation . Request The request is exactly as specified in Create an annotation . Response The response is exactly as specified in Create an annotation . Reference Annotations A reference annotation is an annotation for a specific audio recording, usually generated through forced alignment (matches words in the prompt of the challenge to the audio recording). That leads to annotations on the fragments where a relation between prompt and audio was found (the alignment). No error or out of prompt classes are assigned in an automated fashion. This is the starting point to create human annotations. Get a single reference annotation When a reference annotation has been added for a specific recording at an earlier time, this is how to retrieve it. The URL includes the full namespace to the recording. URL GET /organisations/:organisation/challenges/speech/:challenge/recordings/:recording/reference HTTP/1.1 Request parameters These are exactly as specified in Get a single annotation . Request The request is exactly as specified in Get a single annotation . Response The response is exactly as specified in Get a single annotation . Update a reference annotation There's no POST API call to create an annotation. It's basically a property of a recording to update, therefore it's a PUT call. Due to different permissions it requires (an admin would need to impersonate), it's not part of the recording PUT. URL PUT /organisations/:organisation/challenges/speech/:challenge/recordings/:recording/reference HTTP/1.1 Request parameters Parameters should be posted as JSON body. Name Type Description annotations list Required The annotations as list of type Fragment (as specified above). Response The response is exactly as specified in Create an annotation .","title":"Annotations"},{"location":"api/annotations.html#annotations","text":"Annotations are notes to specific fragments of audio. These annotations can then be classified. Common classifiers are Prompt , Out of Prompt or Error . Annotations are made by users called annotators. They are able to put these annotations on recorded audio. An annotator either has the role of full annotator of base annotator. Base annotators only have a subset of labels available to annotate with. The more senior full annotator can correct the base annotators annotation and has an extended set of labels available.","title":"Annotations"},{"location":"api/annotations.html#list-all-annotations","text":"A user with the 'ADMIN' role will receive all the annotations. Non-admins will receive only the annotations assigned to them. See below for further filtering options.","title":"List all annotations"},{"location":"api/annotations.html#url","text":"GET /annotations HTTP/1.1","title":"URL"},{"location":"api/annotations.html#request-parameters","text":"The are no request parameters GET /annotations?recording=1 HTTP/1.1 Accept: application/json","title":"Request parameters"},{"location":"api/annotations.html#filters","text":"The following filters may be applied: Name Type Description annotator string The unique identier of the annotator to find the annotations for. assignment string The assignment for which to find the annotations. recording string The speech recording for which to find the annotations. done bool Whether or not and how to filter on the done property. None when all values are allowed, True if only done annotations are desired. False for all not finished annotations. perPage string Amount of annotations to return. startCursor string A previously returned cursor to use as an 'offset'.","title":"Filters"},{"location":"api/annotations.html#response","text":"The response is a JSON list with annotations. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\":5646929551687680, \"updated\":\"2018-06-07T13:50:44Z\", \"created\":\"2018-06-07T13:50:44Z\", \"assignment\":4873731453222912, \"doneBase\":null, \"doneFull\":null, \"recording\":{ \"recording\":\"5715999101812736\", \"organisation\":\"aschool\", \"challenge\":\"challenge1\", \"digest\":null, \"tenant\":\"demo\" }, \"audioUrl\":\"https://api.itslanguage.io/download/2257a2f8ada1446bae8d97f591169de9\", \"fragments\":[ { \"start\":5.81, \"labels\":[ { \"comment\":\"\", \"layer\":\"Words\", \"label\":\"speelt\" } ], \"end\":6.45 }, { \"start\":6.67, \"labels\":[ { \"comment\":\"\", \"layer\":\"Words\", \"label\":\"op\" } ], \"end\":7.17 } ] } ]","title":"Response"},{"location":"api/annotations.html#get-a-single-annotation","text":"","title":"Get a single annotation"},{"location":"api/annotations.html#url_1","text":"GET /annotation/:annotation HTTP/1.1 annotation - Required The annotation identifier.","title":"URL"},{"location":"api/annotations.html#request","text":"GET /annotation/annotation_1 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/annotations.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\":5646929551687680, \"updated\":\"2018-06-07T13:50:44Z\", \"created\":\"2018-06-07T13:50:44Z\", \"assignment\":4873731453222912, \"doneBase\":null, \"doneFull\":null, \"recording\":{ \"recording\":\"5715999101812736\", \"organisation\":\"aschool\", \"challenge\":\"challenge1\", \"digest\":null, \"tenant\":\"demo\" }, \"audioUrl\":\"https://api.itslanguage.io/download/2257a2f8ada1446bae8d97f591169de9\", \"fragments\":[ { \"start\":5.81, \"labels\":[ { \"comment\":\"\", \"layer\":\"Words\", \"label\":\"speelt\" } ], \"end\":6.45 }, { \"start\":6.67, \"labels\":[ { \"comment\":\"\", \"layer\":\"Words\", \"label\":\"op\" } ], \"end\":7.17 } ] }","title":"Response"},{"location":"api/annotations.html#create-an-annotation","text":"","title":"Create an annotation"},{"location":"api/annotations.html#url_2","text":"POST /annotations HTTP/1.1 Accept: application/json Content: application/json { \"annotation\":\"5646929551687680\", \"assignment\":4873731453222912, \"recording\":{ \"recording\":\"5715999101812736\", \"organisation\":\"org1\", \"challenge\":\"challenge1\", \"tenant\":\"demo\" }, \"fragments\":[ { \"start\":0.59, \"end\":1.07, \"labels\":[ { \"layer\":\"Words\", \"label\":\"zon\", \"comment\":\"\" }, { \"layer\":\"OutOfPrompt\", \"label\":\"InsertionUtterance\", \"comment\":\"zo\" } ] }, { \"start\":9.81, \"end\":10.93, \"labels\":[ { \"layer\":\"Words\", \"label\":\"weer.\", \"comment\":\"\" } ] }, ], }","title":"URL"},{"location":"api/annotations.html#request-parameters_1","text":"Parameters should be posted as JSON body. Name Type Description id string Optional The unique identier of the annotation. If none is given, one is generated. doneBase string Optional The datetime this annotation was marked as done by the base annotator. doneFull string Optional The datetime this annotation was marked as done by the full annotator. recording string Required The reference to the recording (type FlatRecordingReference as specified below. assignment string Required The unique identifier of the assignment this annotation is for. fragments list Required The annotated fragments (type Fragment as specified below). The Recording format ( FlatRecordingReference ). All parameters together form the full namespace of one audio recording. Parameters should be posted as JSON body. Name Type Description tenant string Required The unique identier of the tenant. organisation string Required The identifier of the organisation within the tenant namespace. challenge string Required The identifier of the challenge as specified within the organisation.. recording string Required The identifier of the recording as specified within the organisation. The Fragment format: Parameters should be posted as JSON body. Name Type Description start float Required The start point of the fragment, in seconds. end float Required The end point of the fragment, in seconds. labels list Required The labels assigned to this fragment (type Label as specified below). The Label format: Parameters should be posted as JSON body. Name Type Description layer string Required The specifier for the layer (e.g. Words , OutOfPrompt , Error , Noise ). label string Required The specifier of a particular label within a layer (on the Words layer we would expect the word here). comment string Required An optional extra value.","title":"Request parameters"},{"location":"api/annotations.html#response_2","text":"HTTP/1.1 200 OK Content-Type: application/json { \"updated\":\"2019-04-14T07:55:16Z\", \"created\":\"2018-06-07T13:50:44Z\", \"id\":5646929551687680, \"doneBase\":null, \"doneFull\":null \"assignment\":4873731453222912, \"recording\":{ \"recording\":\"5715999101812736\", \"organisation\":\"org1\", \"challenge\":\"challenge1\", \"digest\":null, \"tenant\":\"demo\" }, \"audioUrl\":\"https://api.itslanguage.io/download/3357a2f8ada1446bae8d97f591169de9\", \"fragments\":[ { \"start\":0.59, \"end\":1.07, \"labels\":[ { \"layer\":\"Words\", \"label\":\"zon\", \"comment\":\"\" }, { \"layer\":\"OutOfPrompt\", \"label\":\"InsertionUtterance\", \"comment\":\"zo\" } ] }, { \"start\":9.81, \"end\":10.93, \"labels\":[ { \"layer\":\"Words\", \"label\":\"weer.\", \"comment\":\"\" } ] } ] }","title":"Response"},{"location":"api/annotations.html#update-an-annotation","text":"","title":"Update an annotation"},{"location":"api/annotations.html#url_3","text":"PUT /annotations/:annotation HTTP/1.1 annotation - Required The annotation identifier. Update one or more properties of an existing annotation.","title":"URL"},{"location":"api/annotations.html#request-parameters_2","text":"These are exactly as specified in Create an annotation .","title":"Request parameters"},{"location":"api/annotations.html#request_1","text":"The request is exactly as specified in Create an annotation .","title":"Request"},{"location":"api/annotations.html#response_3","text":"The response is exactly as specified in Create an annotation .","title":"Response"},{"location":"api/annotations.html#reference-annotations","text":"A reference annotation is an annotation for a specific audio recording, usually generated through forced alignment (matches words in the prompt of the challenge to the audio recording). That leads to annotations on the fragments where a relation between prompt and audio was found (the alignment). No error or out of prompt classes are assigned in an automated fashion. This is the starting point to create human annotations.","title":"Reference Annotations"},{"location":"api/annotations.html#get-a-single-reference-annotation","text":"When a reference annotation has been added for a specific recording at an earlier time, this is how to retrieve it. The URL includes the full namespace to the recording.","title":"Get a single reference annotation"},{"location":"api/annotations.html#url_4","text":"GET /organisations/:organisation/challenges/speech/:challenge/recordings/:recording/reference HTTP/1.1","title":"URL"},{"location":"api/annotations.html#request-parameters_3","text":"These are exactly as specified in Get a single annotation .","title":"Request parameters"},{"location":"api/annotations.html#request_2","text":"The request is exactly as specified in Get a single annotation .","title":"Request"},{"location":"api/annotations.html#response_4","text":"The response is exactly as specified in Get a single annotation .","title":"Response"},{"location":"api/annotations.html#update-a-reference-annotation","text":"There's no POST API call to create an annotation. It's basically a property of a recording to update, therefore it's a PUT call. Due to different permissions it requires (an admin would need to impersonate), it's not part of the recording PUT.","title":"Update a reference annotation"},{"location":"api/annotations.html#url_5","text":"PUT /organisations/:organisation/challenges/speech/:challenge/recordings/:recording/reference HTTP/1.1","title":"URL"},{"location":"api/annotations.html#request-parameters_4","text":"Parameters should be posted as JSON body. Name Type Description annotations list Required The annotations as list of type Fragment (as specified above).","title":"Request parameters"},{"location":"api/annotations.html#response_5","text":"The response is exactly as specified in Create an annotation .","title":"Response"},{"location":"api/assignments.html","text":"Assignments Annotation assignments provide a set of speech recordings to one (base annotator) or two (also the full annotator) specific users to annotate. List all assignments A user with the 'ADMIN' role will receive all the assignments. Non-admins will receive only the assignments assigned to them. URL GET /assignments HTTP/1.1 Request GET /assignments HTTP/1.1 Accept: application/json Response The response is a JSON list with assignments. The digest field is the filename without extension for a given recording. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\":49847474, \"created\":\"2017-08-25T14:12:15Z\", \"updated\":\"2018-06-10T10:24:20Z\", \"name\":\"Assignment #1\", \"baseDueDate\":\"2017-11-05T00:00:00Z\", \"fullDueDate\":\"2017-11-12T00:00:00Z\", \"recordings\":[ { \"recording\":\"53242344042624\", \"organisation\":\"testschoolbarneveld\", \"challenge\":\"challenge1\", \"digest\":\"82c2b290ef674edf99af0e184dc5e6c4\", \"tenant\":null } ], \"annotations\":[ { \"id\":6236956254011392, \"recording\":{ \"recording\":\"53242344042624\", \"organisation\":\"testschoolbarneveld\", \"challenge\":\"challenge1\", \"digest\":null, \"tenant\":\"demo\" }, \"doneBase\":null, \"doneFull\":null } ] } ] Get a single assignment URL GET /assignment/:assignment HTTP/1.1 assignment - Required The assignment identifier. Request GET /assignment/assignment_1 HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\":49847474, \"created\":\"2017-08-25T14:12:15Z\", \"updated\":\"2018-06-10T10:24:20Z\", \"name\":\"Assignment #1\", \"baseDueDate\":\"2017-11-05T00:00:00Z\", \"fullDueDate\":\"2017-11-12T00:00:00Z\", \"recordings\":[ { \"recording\":\"53242344042624\", \"organisation\":\"testschoolbarneveld\", \"challenge\":\"challenge1\", \"digest\":\"82c2b290ef674edf99af0e184dc5e6c4\", \"tenant\":null } ], \"annotations\":[ { \"id\":6236956254011392, \"recording\":{ \"recording\":\"53242344042624\", \"organisation\":\"testschoolbarneveld\", \"challenge\":\"challenge1\", \"digest\":null, \"tenant\":\"demo\" }, \"doneBase\":null, \"doneFull\":null } ] } Create an assignment URL POST /assignments HTTP/1.1 Request parameters Parameters should be posted as JSON body. Name Type Description id string Optional The unique identier of the assignment. If none is given, one is generated. name string Optional The name for the assignment serving as guidance to the annotator. baseAnnotator string Optional The unique identifier of the annotator user appointed as base annotator. fullAnnotator string Required The unique identifier of the annotator user appointed as full annotator. recordings list Required The recording to include in the assignment. See below for the format of each recording. baseDueDate string Optional The due date for when all recordings should be completed by the base annnotator. fullDueDate string Optional The due date for when all recordings should be completed by the full annnotator. The Recording format ( FlatRecordingReference ). All parameters together form the full namespace of one audio recording. Parameters should be posted as JSON body. Name Type Description tenant string Required The unique identier of the tenant. organisation string Required The identifier of the organisation within the tenant namespace. challenge string Required The identifier of the challenge as specified within the organisation.. recording string Required The identifier of the recording as specified within the organisation. Update an assignment URL PUT /assignments/:assignment HTTP/1.1 assignment - Required The assignment identifier. Update one or more properties of an existing assignment. Request parameters These are exactly as specified in Create an assignment . Request The request is exactly as specified in Create an assignment . Response The response is exactly as specified in Create an assignment .","title":"Assignments"},{"location":"api/assignments.html#assignments","text":"Annotation assignments provide a set of speech recordings to one (base annotator) or two (also the full annotator) specific users to annotate.","title":"Assignments"},{"location":"api/assignments.html#list-all-assignments","text":"A user with the 'ADMIN' role will receive all the assignments. Non-admins will receive only the assignments assigned to them.","title":"List all assignments"},{"location":"api/assignments.html#url","text":"GET /assignments HTTP/1.1","title":"URL"},{"location":"api/assignments.html#request","text":"GET /assignments HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/assignments.html#response","text":"The response is a JSON list with assignments. The digest field is the filename without extension for a given recording. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\":49847474, \"created\":\"2017-08-25T14:12:15Z\", \"updated\":\"2018-06-10T10:24:20Z\", \"name\":\"Assignment #1\", \"baseDueDate\":\"2017-11-05T00:00:00Z\", \"fullDueDate\":\"2017-11-12T00:00:00Z\", \"recordings\":[ { \"recording\":\"53242344042624\", \"organisation\":\"testschoolbarneveld\", \"challenge\":\"challenge1\", \"digest\":\"82c2b290ef674edf99af0e184dc5e6c4\", \"tenant\":null } ], \"annotations\":[ { \"id\":6236956254011392, \"recording\":{ \"recording\":\"53242344042624\", \"organisation\":\"testschoolbarneveld\", \"challenge\":\"challenge1\", \"digest\":null, \"tenant\":\"demo\" }, \"doneBase\":null, \"doneFull\":null } ] } ]","title":"Response"},{"location":"api/assignments.html#get-a-single-assignment","text":"","title":"Get a single assignment"},{"location":"api/assignments.html#url_1","text":"GET /assignment/:assignment HTTP/1.1 assignment - Required The assignment identifier.","title":"URL"},{"location":"api/assignments.html#request_1","text":"GET /assignment/assignment_1 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/assignments.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\":49847474, \"created\":\"2017-08-25T14:12:15Z\", \"updated\":\"2018-06-10T10:24:20Z\", \"name\":\"Assignment #1\", \"baseDueDate\":\"2017-11-05T00:00:00Z\", \"fullDueDate\":\"2017-11-12T00:00:00Z\", \"recordings\":[ { \"recording\":\"53242344042624\", \"organisation\":\"testschoolbarneveld\", \"challenge\":\"challenge1\", \"digest\":\"82c2b290ef674edf99af0e184dc5e6c4\", \"tenant\":null } ], \"annotations\":[ { \"id\":6236956254011392, \"recording\":{ \"recording\":\"53242344042624\", \"organisation\":\"testschoolbarneveld\", \"challenge\":\"challenge1\", \"digest\":null, \"tenant\":\"demo\" }, \"doneBase\":null, \"doneFull\":null } ] }","title":"Response"},{"location":"api/assignments.html#create-an-assignment","text":"","title":"Create an assignment"},{"location":"api/assignments.html#url_2","text":"POST /assignments HTTP/1.1","title":"URL"},{"location":"api/assignments.html#request-parameters","text":"Parameters should be posted as JSON body. Name Type Description id string Optional The unique identier of the assignment. If none is given, one is generated. name string Optional The name for the assignment serving as guidance to the annotator. baseAnnotator string Optional The unique identifier of the annotator user appointed as base annotator. fullAnnotator string Required The unique identifier of the annotator user appointed as full annotator. recordings list Required The recording to include in the assignment. See below for the format of each recording. baseDueDate string Optional The due date for when all recordings should be completed by the base annnotator. fullDueDate string Optional The due date for when all recordings should be completed by the full annnotator. The Recording format ( FlatRecordingReference ). All parameters together form the full namespace of one audio recording. Parameters should be posted as JSON body. Name Type Description tenant string Required The unique identier of the tenant. organisation string Required The identifier of the organisation within the tenant namespace. challenge string Required The identifier of the challenge as specified within the organisation.. recording string Required The identifier of the recording as specified within the organisation.","title":"Request parameters"},{"location":"api/assignments.html#update-an-assignment","text":"","title":"Update an assignment"},{"location":"api/assignments.html#url_3","text":"PUT /assignments/:assignment HTTP/1.1 assignment - Required The assignment identifier. Update one or more properties of an existing assignment.","title":"URL"},{"location":"api/assignments.html#request-parameters_1","text":"These are exactly as specified in Create an assignment .","title":"Request parameters"},{"location":"api/assignments.html#request_2","text":"The request is exactly as specified in Create an assignment .","title":"Request"},{"location":"api/assignments.html#response_2","text":"The response is exactly as specified in Create an assignment .","title":"Response"},{"location":"api/authentication.html","text":"Tenant server authentication Each tenant will receive a set of secrets called principal and credentials. The principal is a unique identifier (like a username) and the credentials are a secret, only the tenant should know (a password). A tenant can authenticate using these secrets. The secrets are sent in an HTTP Form string to request an OAuth2 Token. See OAuth2","title":"Authentication"},{"location":"api/authentication.html#tenant-server-authentication","text":"Each tenant will receive a set of secrets called principal and credentials. The principal is a unique identifier (like a username) and the credentials are a secret, only the tenant should know (a password). A tenant can authenticate using these secrets. The secrets are sent in an HTTP Form string to request an OAuth2 Token. See OAuth2","title":"Tenant server authentication"},{"location":"api/basicauths.html","text":"Username/password authentication Users can have username/password based credentials (basicauth). These credentials can be managed using the REST API. Only users with administrative powers can perform these calls. Create credentials URL To create a basicauth for the current user: POST /user/basicauths HTTP/1.1 To create a basicauth for another user, impersonate the user first. When creating a basicauth for a user in an organisation, the username doesn't need to be unique across organisations. The username does need to be unique within the organisation. Input Name Type Description username string Required A unique username. password string Required A secure password. Request POST /user/basicauths HTTP/1.1 Accept: application/json Content-Type: application/json { \"username\": \"harry\", \"password\": \"alohomora\" } Response HTTP/1.1 201 Created Content-Type: application/json { \"email\": \"harry\", \"password\": \"alohomora\" } Delete a credential URL To delete a basicauth for the current user: DELETE /user/basicauths/:basicauth HTTP/1.1 To delete a basicauth for another user, impersonate the user first. Request DELETE /user/basicauths/1 HTTP/1.1 Response HTTP/1.1 204 No Content","title":"Basic authentication"},{"location":"api/basicauths.html#usernamepassword-authentication","text":"Users can have username/password based credentials (basicauth). These credentials can be managed using the REST API. Only users with administrative powers can perform these calls.","title":"Username/password authentication"},{"location":"api/basicauths.html#create-credentials","text":"","title":"Create credentials"},{"location":"api/basicauths.html#url","text":"To create a basicauth for the current user: POST /user/basicauths HTTP/1.1 To create a basicauth for another user, impersonate the user first. When creating a basicauth for a user in an organisation, the username doesn't need to be unique across organisations. The username does need to be unique within the organisation.","title":"URL"},{"location":"api/basicauths.html#input","text":"Name Type Description username string Required A unique username. password string Required A secure password.","title":"Input"},{"location":"api/basicauths.html#request","text":"POST /user/basicauths HTTP/1.1 Accept: application/json Content-Type: application/json { \"username\": \"harry\", \"password\": \"alohomora\" }","title":"Request"},{"location":"api/basicauths.html#response","text":"HTTP/1.1 201 Created Content-Type: application/json { \"email\": \"harry\", \"password\": \"alohomora\" }","title":"Response"},{"location":"api/basicauths.html#delete-a-credential","text":"","title":"Delete a credential"},{"location":"api/basicauths.html#url_1","text":"To delete a basicauth for the current user: DELETE /user/basicauths/:basicauth HTTP/1.1 To delete a basicauth for another user, impersonate the user first.","title":"URL"},{"location":"api/basicauths.html#request_1","text":"DELETE /user/basicauths/1 HTTP/1.1","title":"Request"},{"location":"api/basicauths.html#response_1","text":"HTTP/1.1 204 No Content","title":"Response"},{"location":"api/categories.html","text":"Categories Categorize Speech Challenges or categories. List all top level categories List all top level categories which do not have a parent category. URL GET /categories HTTP/1.1 Request GET /categories HTTP/1.1 Accept: application/json Response The response is a JSON list with categories. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"category_1\", \"parent\": null, \"created\": \"2017-01-12T09:35:20Z\", \"updated\": \"2017-01-12T09:35:20Z\", \"name\": \"Category 1\", \"order\": 1, \"description\": \"Some awesome description.\", \"color\": \"#00f\", \"imageUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"iconUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"speechChallenges\": [] }, { \"id\": \"category_2\", \"parent\": null, \"created\": \"2017-01-12T09:36:20Z\", \"updated\": \"2017-01-12T09:36:20Z\", \"name\": \"Category 2\", \"order\": 3, \"description\": \"Another awesome description.\", \"color\": \"#0f0\", \"imageUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"iconUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"speechChallenges\": [] } ] Listing all categories with same parent A category can be parent of another category (nesting). In order to get all categories with the same parent, this url can be used. URL GET /categories/:category/categories HTTP/1.1 category - Required The category identifier. Request GET /categories/category_1/categories HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"category_1_1\", \"parent\": \"category_1\", \"created\": \"2017-01-13T09:35:20Z\", \"updated\": \"2017-01-13T09:35:20Z\", \"name\": \"Category 1.1\", \"order\": 1, \"description\": \"Some awesome description.\", \"color\": \"#00f\", \"imageUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"iconUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"speechChallenges\": [\"speech_x\"] }, { \"id\": \"category_1_2\", \"parent\": \"category_1\", \"created\": \"2017-01-13T09:36:20Z\", \"updated\": \"2017-01-13T09:36:20Z\", \"name\": \"Category 1.2\", \"order\": 66, \"description\": \"Another awesome description.\", \"color\": \"#0f0\", \"imageUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"iconUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"speechChallenges\": [\"speech_y\", \"speech_w\"] } ] Get a single category URL GET /categories/:category HTTP/1.1 category - Required The category identifier. Request GET /categories/category_1_1 HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"category_1_1\", \"parent\": \"category_1\", \"created\": \"2017-01-12T09:38:20Z\", \"updated\": \"2017-01-12T09:38:20Z\", \"name\": \"Category 1.1\", \"order\": 66, \"description\": \"Commander Cody, the time has come.\", \"color\": null, \"imageUrl\": null, \"iconUrl\": null, \"speechChallenges\": [\"speech_1\", \"12\"] } Create a catetory URL POST /categories HTTP/1.1 Request parameters Name Type Description id string Optional The category identifier. If none is given, one is generated. parent string Optional Identifier of the parent category. name string Optional A name for the category. order string Optional An optional index to ensure a specific ordering. description string Optional A possible more verbose description about the category. color string Optional A color, preferably in RGB format. image blob Optional An image to show with the category. icon blob Optional An icon to show with the category. speechChallenges string Optional Speech Challenge identifiers categorized in the category. Request POST /categories HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"id\" category_3 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"name\" Category 3 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"order\" 66 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"description\" Category three. Winner of all categories. Yes. --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"color\" #e3e3e3 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"image\"; filename=\"img.png\" Content-Type: image/png <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"icon\"; filename=\"icon.png\" Content-Type: image/png <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"speechChallenges\" speech_1 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"speechChallenges\" speech_2 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"speechChallenges\" speech_3 --jhgd87g7Gy3d78-- Response HTTP/1.1 201 Created Content-Type: application/json Location: https://api.itslanguage.io/categories/category_3 { \"id\": \"category_3\", \"created\": \"2017-01-12T09:50:20Z\", \"updated\": \"2017-01-12T09:50:20Z\", \"name\": \"Category 3\", \"order\": 66, \"description\": \"Category three. Winner of all categories. Yes.\", \"color\": \"#e3e3e3\", \"imageUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"iconUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"speechChallenges\": [\"speech_1\", \"speech_2\", \"speech_3\"] }","title":"Category"},{"location":"api/categories.html#categories","text":"Categorize Speech Challenges or categories.","title":"Categories"},{"location":"api/categories.html#list-all-top-level-categories","text":"List all top level categories which do not have a parent category.","title":"List all top level categories"},{"location":"api/categories.html#url","text":"GET /categories HTTP/1.1","title":"URL"},{"location":"api/categories.html#request","text":"GET /categories HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/categories.html#response","text":"The response is a JSON list with categories. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"category_1\", \"parent\": null, \"created\": \"2017-01-12T09:35:20Z\", \"updated\": \"2017-01-12T09:35:20Z\", \"name\": \"Category 1\", \"order\": 1, \"description\": \"Some awesome description.\", \"color\": \"#00f\", \"imageUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"iconUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"speechChallenges\": [] }, { \"id\": \"category_2\", \"parent\": null, \"created\": \"2017-01-12T09:36:20Z\", \"updated\": \"2017-01-12T09:36:20Z\", \"name\": \"Category 2\", \"order\": 3, \"description\": \"Another awesome description.\", \"color\": \"#0f0\", \"imageUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"iconUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"speechChallenges\": [] } ]","title":"Response"},{"location":"api/categories.html#listing-all-categories-with-same-parent","text":"A category can be parent of another category (nesting). In order to get all categories with the same parent, this url can be used.","title":"Listing all categories with same parent"},{"location":"api/categories.html#url_1","text":"GET /categories/:category/categories HTTP/1.1 category - Required The category identifier.","title":"URL"},{"location":"api/categories.html#request_1","text":"GET /categories/category_1/categories HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/categories.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"category_1_1\", \"parent\": \"category_1\", \"created\": \"2017-01-13T09:35:20Z\", \"updated\": \"2017-01-13T09:35:20Z\", \"name\": \"Category 1.1\", \"order\": 1, \"description\": \"Some awesome description.\", \"color\": \"#00f\", \"imageUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"iconUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"speechChallenges\": [\"speech_x\"] }, { \"id\": \"category_1_2\", \"parent\": \"category_1\", \"created\": \"2017-01-13T09:36:20Z\", \"updated\": \"2017-01-13T09:36:20Z\", \"name\": \"Category 1.2\", \"order\": 66, \"description\": \"Another awesome description.\", \"color\": \"#0f0\", \"imageUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"iconUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"speechChallenges\": [\"speech_y\", \"speech_w\"] } ]","title":"Response"},{"location":"api/categories.html#get-a-single-category","text":"","title":"Get a single category"},{"location":"api/categories.html#url_2","text":"GET /categories/:category HTTP/1.1 category - Required The category identifier.","title":"URL"},{"location":"api/categories.html#request_2","text":"GET /categories/category_1_1 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/categories.html#response_2","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"category_1_1\", \"parent\": \"category_1\", \"created\": \"2017-01-12T09:38:20Z\", \"updated\": \"2017-01-12T09:38:20Z\", \"name\": \"Category 1.1\", \"order\": 66, \"description\": \"Commander Cody, the time has come.\", \"color\": null, \"imageUrl\": null, \"iconUrl\": null, \"speechChallenges\": [\"speech_1\", \"12\"] }","title":"Response"},{"location":"api/categories.html#create-a-catetory","text":"","title":"Create a catetory"},{"location":"api/categories.html#url_3","text":"POST /categories HTTP/1.1","title":"URL"},{"location":"api/categories.html#request-parameters","text":"Name Type Description id string Optional The category identifier. If none is given, one is generated. parent string Optional Identifier of the parent category. name string Optional A name for the category. order string Optional An optional index to ensure a specific ordering. description string Optional A possible more verbose description about the category. color string Optional A color, preferably in RGB format. image blob Optional An image to show with the category. icon blob Optional An icon to show with the category. speechChallenges string Optional Speech Challenge identifiers categorized in the category.","title":"Request parameters"},{"location":"api/categories.html#request_3","text":"POST /categories HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"id\" category_3 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"name\" Category 3 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"order\" 66 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"description\" Category three. Winner of all categories. Yes. --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"color\" #e3e3e3 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"image\"; filename=\"img.png\" Content-Type: image/png <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"icon\"; filename=\"icon.png\" Content-Type: image/png <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"speechChallenges\" speech_1 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"speechChallenges\" speech_2 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"speechChallenges\" speech_3 --jhgd87g7Gy3d78--","title":"Request"},{"location":"api/categories.html#response_3","text":"HTTP/1.1 201 Created Content-Type: application/json Location: https://api.itslanguage.io/categories/category_3 { \"id\": \"category_3\", \"created\": \"2017-01-12T09:50:20Z\", \"updated\": \"2017-01-12T09:50:20Z\", \"name\": \"Category 3\", \"order\": 66, \"description\": \"Category three. Winner of all categories. Yes.\", \"color\": \"#e3e3e3\", \"imageUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"iconUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"speechChallenges\": [\"speech_1\", \"speech_2\", \"speech_3\"] }","title":"Response"},{"location":"api/choice_challenges.html","text":"Choice Challenges A set of transcription choices is used to perform speech recognition to select one of the choices. Fields A choice challenge contains the following fields. It is also noted whether it is a required or optional parameter. Name Type Description id string Optional The choice challenge identifier. If none is given, one is generated. question string Optional A hint or question related to the choices. choices string[] Required The sentences of which at most one may be recognised. audio blob[] Optional Audible sentences that match the ones in choices at the same index. status string Required The status of the challenge's preparation. Either 'unprepared', 'preparing' or 'prepared'. After creating a choice challenge, the status is 'preparing' for a short while, after it'll become 'prepared' to indicate the challenge is ready to perform a speech recognition on, or it'll be 'unprepared' in case the preparation failed for any reason. List all choice challenges URL GET /challenges/choice HTTP/1.1 Request GET /challenges/choice HTTP/1.1 Accept: application/json Response The response is a JSON list with choice challenges. The second entry shows that choice challenges can also be used to recognise one specific sentence. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"13\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"question\": \"The Pitcairn Islands are ... in the South Pacific Ocean\", \"choices\": [ { \"choice\": \"located\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\" }, { \"choice\": \"sited\", \"audioUrl\": null }, { \"choice\": \"stationed\", \"audioUrl\": null }, { \"choice\": \"settled\", \"audioUrl\": null } ], \"status\": \"prepared\" }, { \"id\": \"14\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"question\": \"Ik heb erge hoofdpijn.\", \"choices\": [ { \"choice\": \"I have a very bad headache.\", \"audioUrl\": null } ], \"status\": \"preparing\" } ] Get a single choice challenge URL GET /challenges/choice/:challenge HTTP/1.1 challenge - Required The choice challenge identifier. Request GET /challenges/choice/choice_1 HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"13\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"question\": \"The Pitcairn Islands are ... in the South Pacific Ocean\", \"choices\": [ { \"choice\": \"located\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\" }, { \"choice\": \"sited\", \"audioUrl\": null }, { \"choice\": \"stationed\", \"audioUrl\": null }, { \"choice\": \"settled\", \"audioUrl\": null } ], \"status\": \"prepared\" } Create a choice challenge URL POST /challenges/choice HTTP/1.1 Request POST /challenges/choice HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"choices\" located --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"choices\" sited --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <spoken audio: located> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/wav <spoken audio: sited> --jhgd87g7Gy3d78-- Response HTTP/1.1 202 Accepted Content-Type: application/json Location: https://api.itslanguage.io/challenges/choice/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"question\": \"The Pitcairn Islands are ... in the South Pacific Ocean\", \"choices\": [ { \"choice\": \"located\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\" }, { \"choice\": \"sited\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsK\" } ], \"status\": \"preparing\" } Update a choice challenge Update one or more properties of an existing choice challenge. URL PUT /challenges/choice/:challenge HTTP/1.1 challenge - Required The choice challenge identifier. Request Parameters See Fields for parameter names. All parameters are optional as this concerns an incremental update. Request PUT /challenges/choice/4 HTTP/1.1 Accept: application/json Content-Type: application/json { \"choices\": [ \"located\", \"sited\", \"stationed\", \"settled\" ] } Or, with a preference for a web form submit: PUT /challenges/choice HTTP/1.1 Content-Type: application/x-www-form-urlencoded choices=located&choices=sited&choices=stationed&choices=settled Response fields For all fields see Fields . Noteworthy things are below. Name Note status Once a choice challenge has been updated, no speech recognitions can be performed on it until the status becomes 'prepared' again, even though the choice challenge was 'prepared' before the update. Response HTTP/1.1 200 OK Content-Type: application/json Location: https://api.itslanguage.io/challenges/choice/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"question\": \"The Pitcairn Islands are ... in the South Pacific Ocean\", \"choices\": [ \"located\", \"sited\", \"stationed\", \"settled\" ], \"status\": \"preparing\" } Delete a single choice challenge URL DELETE /challenges/choice/:challenge HTTP/1.1 challenge - Required The choice challenge identifier. Request DELETE /challenges/choice/choice_1 HTTP/1.1 Response HTTP/1.1 204 No Content","title":"Choice"},{"location":"api/choice_challenges.html#choice-challenges","text":"A set of transcription choices is used to perform speech recognition to select one of the choices.","title":"Choice Challenges"},{"location":"api/choice_challenges.html#fields","text":"A choice challenge contains the following fields. It is also noted whether it is a required or optional parameter. Name Type Description id string Optional The choice challenge identifier. If none is given, one is generated. question string Optional A hint or question related to the choices. choices string[] Required The sentences of which at most one may be recognised. audio blob[] Optional Audible sentences that match the ones in choices at the same index. status string Required The status of the challenge's preparation. Either 'unprepared', 'preparing' or 'prepared'. After creating a choice challenge, the status is 'preparing' for a short while, after it'll become 'prepared' to indicate the challenge is ready to perform a speech recognition on, or it'll be 'unprepared' in case the preparation failed for any reason.","title":"Fields"},{"location":"api/choice_challenges.html#list-all-choice-challenges","text":"","title":"List all choice challenges"},{"location":"api/choice_challenges.html#url","text":"GET /challenges/choice HTTP/1.1","title":"URL"},{"location":"api/choice_challenges.html#request","text":"GET /challenges/choice HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/choice_challenges.html#response","text":"The response is a JSON list with choice challenges. The second entry shows that choice challenges can also be used to recognise one specific sentence. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"13\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"question\": \"The Pitcairn Islands are ... in the South Pacific Ocean\", \"choices\": [ { \"choice\": \"located\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\" }, { \"choice\": \"sited\", \"audioUrl\": null }, { \"choice\": \"stationed\", \"audioUrl\": null }, { \"choice\": \"settled\", \"audioUrl\": null } ], \"status\": \"prepared\" }, { \"id\": \"14\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"question\": \"Ik heb erge hoofdpijn.\", \"choices\": [ { \"choice\": \"I have a very bad headache.\", \"audioUrl\": null } ], \"status\": \"preparing\" } ]","title":"Response"},{"location":"api/choice_challenges.html#get-a-single-choice-challenge","text":"","title":"Get a single choice challenge"},{"location":"api/choice_challenges.html#url_1","text":"GET /challenges/choice/:challenge HTTP/1.1 challenge - Required The choice challenge identifier.","title":"URL"},{"location":"api/choice_challenges.html#request_1","text":"GET /challenges/choice/choice_1 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/choice_challenges.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"13\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"question\": \"The Pitcairn Islands are ... in the South Pacific Ocean\", \"choices\": [ { \"choice\": \"located\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\" }, { \"choice\": \"sited\", \"audioUrl\": null }, { \"choice\": \"stationed\", \"audioUrl\": null }, { \"choice\": \"settled\", \"audioUrl\": null } ], \"status\": \"prepared\" }","title":"Response"},{"location":"api/choice_challenges.html#create-a-choice-challenge","text":"","title":"Create a choice challenge"},{"location":"api/choice_challenges.html#url_2","text":"POST /challenges/choice HTTP/1.1","title":"URL"},{"location":"api/choice_challenges.html#request_2","text":"POST /challenges/choice HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"choices\" located --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"choices\" sited --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <spoken audio: located> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/wav <spoken audio: sited> --jhgd87g7Gy3d78--","title":"Request"},{"location":"api/choice_challenges.html#response_2","text":"HTTP/1.1 202 Accepted Content-Type: application/json Location: https://api.itslanguage.io/challenges/choice/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"question\": \"The Pitcairn Islands are ... in the South Pacific Ocean\", \"choices\": [ { \"choice\": \"located\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\" }, { \"choice\": \"sited\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsK\" } ], \"status\": \"preparing\" }","title":"Response"},{"location":"api/choice_challenges.html#update-a-choice-challenge","text":"Update one or more properties of an existing choice challenge.","title":"Update a choice challenge"},{"location":"api/choice_challenges.html#url_3","text":"PUT /challenges/choice/:challenge HTTP/1.1 challenge - Required The choice challenge identifier.","title":"URL"},{"location":"api/choice_challenges.html#request-parameters","text":"See Fields for parameter names. All parameters are optional as this concerns an incremental update.","title":"Request Parameters"},{"location":"api/choice_challenges.html#request_3","text":"PUT /challenges/choice/4 HTTP/1.1 Accept: application/json Content-Type: application/json { \"choices\": [ \"located\", \"sited\", \"stationed\", \"settled\" ] } Or, with a preference for a web form submit: PUT /challenges/choice HTTP/1.1 Content-Type: application/x-www-form-urlencoded choices=located&choices=sited&choices=stationed&choices=settled","title":"Request"},{"location":"api/choice_challenges.html#response-fields","text":"For all fields see Fields . Noteworthy things are below. Name Note status Once a choice challenge has been updated, no speech recognitions can be performed on it until the status becomes 'prepared' again, even though the choice challenge was 'prepared' before the update.","title":"Response fields"},{"location":"api/choice_challenges.html#response_3","text":"HTTP/1.1 200 OK Content-Type: application/json Location: https://api.itslanguage.io/challenges/choice/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"question\": \"The Pitcairn Islands are ... in the South Pacific Ocean\", \"choices\": [ \"located\", \"sited\", \"stationed\", \"settled\" ], \"status\": \"preparing\" }","title":"Response"},{"location":"api/choice_challenges.html#delete-a-single-choice-challenge","text":"","title":"Delete a single choice challenge"},{"location":"api/choice_challenges.html#url_4","text":"DELETE /challenges/choice/:challenge HTTP/1.1 challenge - Required The choice challenge identifier.","title":"URL"},{"location":"api/choice_challenges.html#request_4","text":"DELETE /challenges/choice/choice_1 HTTP/1.1","title":"Request"},{"location":"api/choice_challenges.html#response_4","text":"HTTP/1.1 204 No Content","title":"Response"},{"location":"api/cors.html","text":"Cross Origin Resource Sharing The API supports Cross Origin Resource Sharing (CORS) for AJAX requests. For more information, see the CORS W3C working draft , or this intro from the HTML 5 Security Guide. Here's a sample request sent from a browser hitting http://example.com : curl -i https://api.itslanguage.io -H \"Origin: http://example.com\" HTTP/1.1 302 Found This is what the CORS preflight request looks like: curl -i https://api.itslanguage.io -H \"Origin: http://example.com\" -X OPTIONS HTTP/1.1 204 No Content Access-Control-Allow-Origin: * Access-Control-Allow-Headers: Content-Type Access-Control-Allow-Methods: GET, POST, PUT, DELETE Access-Control-Max-Age: 86400 Access-Control-Allow-Credentials: true","title":"Cross Origin Resource Sharing"},{"location":"api/cors.html#cross-origin-resource-sharing","text":"The API supports Cross Origin Resource Sharing (CORS) for AJAX requests. For more information, see the CORS W3C working draft , or this intro from the HTML 5 Security Guide. Here's a sample request sent from a browser hitting http://example.com : curl -i https://api.itslanguage.io -H \"Origin: http://example.com\" HTTP/1.1 302 Found This is what the CORS preflight request looks like: curl -i https://api.itslanguage.io -H \"Origin: http://example.com\" -X OPTIONS HTTP/1.1 204 No Content Access-Control-Allow-Origin: * Access-Control-Allow-Headers: Content-Type Access-Control-Allow-Methods: GET, POST, PUT, DELETE Access-Control-Max-Age: 86400 Access-Control-Allow-Credentials: true","title":"Cross Origin Resource Sharing"},{"location":"api/data_representation.html","text":"Data representation Timestamps All timestamps are returned in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ . Summary Representations When fetching a list of resources, the response includes a subset of the attributes for that resource. This is the \"summary\" representation of the resource. (Some attributes are computationally expensive for the API to provide. For performance reasons, the summary representation excludes those attributes. To obtain those attributes, fetch the \"detailed\" representation using a dedicated API.) Detailed Representations When fetching individual resources, a response typically includes all attributes for that resource. This is the \"detailed\" representation of the resource. (Note that authorization sometimes influences the amount of detail included in the representation.) The documentation provides an example response for each API method. The example response illustrates all attributes that are returned by that method.","title":"Data representation"},{"location":"api/data_representation.html#data-representation","text":"","title":"Data representation"},{"location":"api/data_representation.html#timestamps","text":"All timestamps are returned in ISO 8601 format YYYY-MM-DDTHH:MM:SSZ .","title":"Timestamps"},{"location":"api/data_representation.html#summary-representations","text":"When fetching a list of resources, the response includes a subset of the attributes for that resource. This is the \"summary\" representation of the resource. (Some attributes are computationally expensive for the API to provide. For performance reasons, the summary representation excludes those attributes. To obtain those attributes, fetch the \"detailed\" representation using a dedicated API.)","title":"Summary Representations"},{"location":"api/data_representation.html#detailed-representations","text":"When fetching individual resources, a response typically includes all attributes for that resource. This is the \"detailed\" representation of the resource. (Note that authorization sometimes influences the amount of detail included in the representation.) The documentation provides an example response for each API method. The example response illustrates all attributes that are returned by that method.","title":"Detailed Representations"},{"location":"api/emailauth.html","text":"Email authentication Users can have email based credentials. These credentials can be managed using the REST API. Only users with administrative powers can perform these calls. Create email credentials URL To create an emailauth for the current user: POST /user/emailauths HTTP/1.1 Input Name Type Description email string Required A unique email address. password string Optional A secure password, if none is given, one will be generated. Request POST /users/sdj893us/emailauths HTTP/1.1 Accept: application/json Content-Type: application/json { \"email\": \"SymonvanLonden@dayrep.com\", \"password\": \"aviB3leax\" } Response HTTP/1.1 201 Created Content-Type: application/json { \"email\": \"SymonvanLonden@dayrep.com\", \"password\": \"aviB3leax\" } Delete an email credential URL To delete a emailauth for the current user: DELETE /user/emailauths/:emailauth HTTP/1.1 To delete an emailauth for another user, impersonate the user first. Request DELETE /user/emailauths/1 HTTP/1.1 Response HTTP/1.1 204 No Content","title":"Email authentication"},{"location":"api/emailauth.html#email-authentication","text":"Users can have email based credentials. These credentials can be managed using the REST API. Only users with administrative powers can perform these calls.","title":"Email authentication"},{"location":"api/emailauth.html#create-email-credentials","text":"","title":"Create email credentials"},{"location":"api/emailauth.html#url","text":"To create an emailauth for the current user: POST /user/emailauths HTTP/1.1","title":"URL"},{"location":"api/emailauth.html#input","text":"Name Type Description email string Required A unique email address. password string Optional A secure password, if none is given, one will be generated.","title":"Input"},{"location":"api/emailauth.html#request","text":"POST /users/sdj893us/emailauths HTTP/1.1 Accept: application/json Content-Type: application/json { \"email\": \"SymonvanLonden@dayrep.com\", \"password\": \"aviB3leax\" }","title":"Request"},{"location":"api/emailauth.html#response","text":"HTTP/1.1 201 Created Content-Type: application/json { \"email\": \"SymonvanLonden@dayrep.com\", \"password\": \"aviB3leax\" }","title":"Response"},{"location":"api/emailauth.html#delete-an-email-credential","text":"","title":"Delete an email credential"},{"location":"api/emailauth.html#url_1","text":"To delete a emailauth for the current user: DELETE /user/emailauths/:emailauth HTTP/1.1 To delete an emailauth for another user, impersonate the user first.","title":"URL"},{"location":"api/emailauth.html#request_1","text":"DELETE /user/emailauths/1 HTTP/1.1","title":"Request"},{"location":"api/emailauth.html#response_1","text":"HTTP/1.1 204 No Content","title":"Response"},{"location":"api/errors.html","text":"Errors Errors are reported with HTTP status codes in the 400 (for client errors) or 500 (for server errors) range. The response will contain a JSON object describing the error. Error Format There are three possible types of client errors on API calls that receive request bodies: Sending invalid JSON will result in a 400 Bad Request response. HTTP/1.1 400 Bad Request Content-Type: application/json Content-Length: 36 {\"message\": \"Problems parsing JSON\"} Sending the wrong type of JSON values will result in a 400 Bad Request response. HTTP/1.1 400 Bad Request Content-Type: application/json Content-Length: 41 {\"message\": \"Body should be a JSON Hash\"} Sending invalid fields will result in a 422 Unprocessable Entity response. HTTP/1.1 422 Unprocessable Entity Content-Type: application/json Content-Length: 148 { \"message\": \"Validation Failed\", \"errors\": [ { \"resource\": \"Issue\", \"field\": \"title\", \"code\": \"missing_field\" } ] } All error objects have resource and field properties so that a client can tell what the problem is. There's also an error code to indicate what is wrong with the field. These are the possible validation error codes: Error Name Description missing A resource does not exist. missing_field A required field on a resource has not been set. invalid The formatting of a field is invalid. The documentation for that resource should be able to give you more specific information. already_exists Another resource has the same value as this field. This can happen in resources that must have some unique key (such as Label names). If resources have custom validation errors, they will be documented with the resource. Generic Errors Several types of errors can be raised on most API calls. Therefore, these generic errors are described in the following list, not in each API call individually: Error Code Description 403 Forbidden Make sure to apply the right authentication headers to the request. 404 Not Found One or more parameters failed to result in the retrieval of an exisiting entity. This error may also be returned when the entity exists but belongs to another tenant. 409 Conflict When creating or updating an entity, one of the parameters would lead to overwriting an entity that is already present. 410 Gone When deleting an entity that was already deleted, this error is returned. 422 Unprocessable Entity Some of the provided parameters could not be validated. HTTP Verbs Where possible, the API strives to use appropriate HTTP verbs for each action. Verb Description HEAD Can be issued against any resource to get just the HTTP header info. GET Retrieve resources. POST Create resources, or performing custom actions that'll modify data. PUT Replace resources or collections. PATCH Partially replace resources or collections. DELETE Delete resources. JSONP Errors When clients request responses in JSONP format, the API server will always respond with a 200 response code. This prevents the web browser swallowing the HTTP response without giving the Javascript callback a chance to process it. It is always possible to identify an error response from a successful one by looking at the typename field. The would-be HTTP status code is included in the status field. The JSONP return structure is not final yet.","title":"Error handling"},{"location":"api/errors.html#errors","text":"Errors are reported with HTTP status codes in the 400 (for client errors) or 500 (for server errors) range. The response will contain a JSON object describing the error.","title":"Errors"},{"location":"api/errors.html#error-format","text":"There are three possible types of client errors on API calls that receive request bodies: Sending invalid JSON will result in a 400 Bad Request response. HTTP/1.1 400 Bad Request Content-Type: application/json Content-Length: 36 {\"message\": \"Problems parsing JSON\"} Sending the wrong type of JSON values will result in a 400 Bad Request response. HTTP/1.1 400 Bad Request Content-Type: application/json Content-Length: 41 {\"message\": \"Body should be a JSON Hash\"} Sending invalid fields will result in a 422 Unprocessable Entity response. HTTP/1.1 422 Unprocessable Entity Content-Type: application/json Content-Length: 148 { \"message\": \"Validation Failed\", \"errors\": [ { \"resource\": \"Issue\", \"field\": \"title\", \"code\": \"missing_field\" } ] } All error objects have resource and field properties so that a client can tell what the problem is. There's also an error code to indicate what is wrong with the field. These are the possible validation error codes: Error Name Description missing A resource does not exist. missing_field A required field on a resource has not been set. invalid The formatting of a field is invalid. The documentation for that resource should be able to give you more specific information. already_exists Another resource has the same value as this field. This can happen in resources that must have some unique key (such as Label names). If resources have custom validation errors, they will be documented with the resource.","title":"Error Format"},{"location":"api/errors.html#generic-errors","text":"Several types of errors can be raised on most API calls. Therefore, these generic errors are described in the following list, not in each API call individually: Error Code Description 403 Forbidden Make sure to apply the right authentication headers to the request. 404 Not Found One or more parameters failed to result in the retrieval of an exisiting entity. This error may also be returned when the entity exists but belongs to another tenant. 409 Conflict When creating or updating an entity, one of the parameters would lead to overwriting an entity that is already present. 410 Gone When deleting an entity that was already deleted, this error is returned. 422 Unprocessable Entity Some of the provided parameters could not be validated.","title":"Generic Errors"},{"location":"api/errors.html#http-verbs","text":"Where possible, the API strives to use appropriate HTTP verbs for each action. Verb Description HEAD Can be issued against any resource to get just the HTTP header info. GET Retrieve resources. POST Create resources, or performing custom actions that'll modify data. PUT Replace resources or collections. PATCH Partially replace resources or collections. DELETE Delete resources.","title":"HTTP Verbs"},{"location":"api/errors.html#jsonp-errors","text":"When clients request responses in JSONP format, the API server will always respond with a 200 response code. This prevents the web browser swallowing the HTTP response without giving the Javascript callback a chance to process it. It is always possible to identify an error response from a successful one by looking at the typename field. The would-be HTTP status code is included in the status field. The JSONP return structure is not final yet.","title":"JSONP Errors"},{"location":"api/feedback.html","text":"Speech Feedback Create a feedback result When a user has performed a speech recording and received feedback on it, the feedback result can be stored using this call. The feedback result is created for the current user. URL POST /feedback HTTP/1.1 Request parameters Name Type Description id string Optional The id of the feedback. If none is given, one is generated. audio blob Required The recorded audio. challengeId string Required The id of the speech challenge used to perform the feedback. sentences json Optional The feedback per sentence. extra json Optional Extra data to store. resultSetId string Required The unique id of the result set the recording belongs to. See Recording result set . Request The request should be a multipart/form-data . Example: POST /feedback HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=\"YvHKkjjzXfysYJVHMoOAoNczae\" --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"challengeId\" chal --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <audio blob> --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"sentences\" Content-Type: application/json { \"sentence\": 0, \"errors\": 1, \"words\": [ { \"expected\": \"hello\", \"recognized\": \"hello\", \"error\": null, \"correct\": true }, { \"expected\": \"there\", \"recognized\": \"their\", \"error\": \"substitution\", \"correct\": false } ] } --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"sentences\" Content-Type: application/json { \"sentence\": 1, \"errors\": 0, \"words\": [ { \"expected\": \"general\", \"recognized\": \"general\", \"error\": null, \"correct\": true }, { \"expected\": \"kenobi\", \"recognized\": \"kenobi\", \"error\": null, \"correct\": true } ] } --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"extra\" Content-Type: application/json {'note': 'cheap microphone'} --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"resultSetId\" 5600160f578c4db6b7b0327e16e42153 --YvHKkjjzXfysYJVHMoOAoNczae-- Response If the feedback is stored without error the stored feedback is returned as JSON. Example: HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"34\", \"updated\": \"2018-02-20T09:39:40Z\", \"created\": \"2018-02-20T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.nl/feedback/34/audio\", \"challengeId\": \"chal\", \"sentences\": [ { \"sentence\": 0, \"errors\": 1, \"words\": [ { \"expected\": \"hello\", \"recognized\": \"hello\", \"error\": null, \"correct\": true }, { \"expected\": \"there\", \"recognized\": \"their\", \"error\": \"substitution\", \"correct\": false } ] }, { \"sentence\": 1, \"errors\": 0, \"words\": [ { \"expected\": \"general\", \"recognized\": \"general\", \"error\": null, \"correct\": true }, { \"expected\": \"kenobi\", \"recognized\": \"kenobi\", \"error\": null, \"correct\": true } ] } ], \"extra\": { \"note\": \"cheap microphone\" }, \"resultSet\": { \"id\": \"5600160f578c4db6b7b0327e16e42153\", \"combinedAudioUrl\": \"http://example.com/fullaudio.mp3\", }, \"userId\": \"24\" } Get feedback by id A previously stored feedback can be fetched using a GET request. Feedback can only be get by the owning user or by a user with the TEACHER role. URL POST /feedback/:id HTTP/1.1 id - Required The id of the feedback to get. Request A GET request should be made, application/json should be accepted as a valid return format. (All formats are accepted by default.) GET /feedback/34788437 HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"34\", \"updated\": \"2018-02-20T09:39:40Z\", \"created\": \"2018-02-20T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.nl/feedback/34/audio\", \"challengeId\": \"chal\", \"errors\": [ 0, 2 ], \"extra\": { \"note\": \"cheap microphone\" }, \"resultSet\": { \"id\": \"5600160f578c4db6b7b0327e16e42153\", \"combinedAudioUrl\": \"http://example.com/fullaudio.mp3\", }, \"userId\": \"24\" }","title":"Speech Feedback"},{"location":"api/feedback.html#speech-feedback","text":"","title":"Speech Feedback"},{"location":"api/feedback.html#create-a-feedback-result","text":"When a user has performed a speech recording and received feedback on it, the feedback result can be stored using this call. The feedback result is created for the current user.","title":"Create a feedback result"},{"location":"api/feedback.html#url","text":"POST /feedback HTTP/1.1","title":"URL"},{"location":"api/feedback.html#request-parameters","text":"Name Type Description id string Optional The id of the feedback. If none is given, one is generated. audio blob Required The recorded audio. challengeId string Required The id of the speech challenge used to perform the feedback. sentences json Optional The feedback per sentence. extra json Optional Extra data to store. resultSetId string Required The unique id of the result set the recording belongs to. See Recording result set .","title":"Request parameters"},{"location":"api/feedback.html#request","text":"The request should be a multipart/form-data . Example: POST /feedback HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=\"YvHKkjjzXfysYJVHMoOAoNczae\" --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"challengeId\" chal --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <audio blob> --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"sentences\" Content-Type: application/json { \"sentence\": 0, \"errors\": 1, \"words\": [ { \"expected\": \"hello\", \"recognized\": \"hello\", \"error\": null, \"correct\": true }, { \"expected\": \"there\", \"recognized\": \"their\", \"error\": \"substitution\", \"correct\": false } ] } --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"sentences\" Content-Type: application/json { \"sentence\": 1, \"errors\": 0, \"words\": [ { \"expected\": \"general\", \"recognized\": \"general\", \"error\": null, \"correct\": true }, { \"expected\": \"kenobi\", \"recognized\": \"kenobi\", \"error\": null, \"correct\": true } ] } --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"extra\" Content-Type: application/json {'note': 'cheap microphone'} --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"resultSetId\" 5600160f578c4db6b7b0327e16e42153 --YvHKkjjzXfysYJVHMoOAoNczae--","title":"Request"},{"location":"api/feedback.html#response","text":"If the feedback is stored without error the stored feedback is returned as JSON. Example: HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"34\", \"updated\": \"2018-02-20T09:39:40Z\", \"created\": \"2018-02-20T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.nl/feedback/34/audio\", \"challengeId\": \"chal\", \"sentences\": [ { \"sentence\": 0, \"errors\": 1, \"words\": [ { \"expected\": \"hello\", \"recognized\": \"hello\", \"error\": null, \"correct\": true }, { \"expected\": \"there\", \"recognized\": \"their\", \"error\": \"substitution\", \"correct\": false } ] }, { \"sentence\": 1, \"errors\": 0, \"words\": [ { \"expected\": \"general\", \"recognized\": \"general\", \"error\": null, \"correct\": true }, { \"expected\": \"kenobi\", \"recognized\": \"kenobi\", \"error\": null, \"correct\": true } ] } ], \"extra\": { \"note\": \"cheap microphone\" }, \"resultSet\": { \"id\": \"5600160f578c4db6b7b0327e16e42153\", \"combinedAudioUrl\": \"http://example.com/fullaudio.mp3\", }, \"userId\": \"24\" }","title":"Response"},{"location":"api/feedback.html#get-feedback-by-id","text":"A previously stored feedback can be fetched using a GET request. Feedback can only be get by the owning user or by a user with the TEACHER role.","title":"Get feedback by id"},{"location":"api/feedback.html#url_1","text":"POST /feedback/:id HTTP/1.1 id - Required The id of the feedback to get.","title":"URL"},{"location":"api/feedback.html#request_1","text":"A GET request should be made, application/json should be accepted as a valid return format. (All formats are accepted by default.) GET /feedback/34788437 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/feedback.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"34\", \"updated\": \"2018-02-20T09:39:40Z\", \"created\": \"2018-02-20T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.nl/feedback/34/audio\", \"challengeId\": \"chal\", \"errors\": [ 0, 2 ], \"extra\": { \"note\": \"cheap microphone\" }, \"resultSet\": { \"id\": \"5600160f578c4db6b7b0327e16e42153\", \"combinedAudioUrl\": \"http://example.com/fullaudio.mp3\", }, \"userId\": \"24\" }","title":"Response"},{"location":"api/filters.html","text":"Filters In some cases, when performing a GET, not all results are desirable. In such a case a filter can be applied to return selective results. A filter can be specified by using a query parameter. Multiple values for the same filter can be given by specifying the filter multiple times. For example, when listing entities using the URL /entities the result may be as below: HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"foo\", \"categories\": [\"a\", \"x\"] }, { \"id\": \"bar\", \"categories\": [\"x\"] } ] If the API supports filtering on category (see the docs of the concerning API), the results can be limited to a certain category by using a filter. For example, to show only entities in category a the following request can be made: GET /entities?category=a HTTP/1.1 When desired, a filter can be applied with multiple values. For example, to show only entities in category a and category x the following request can be made: GET /entities?category=a&category=x HTTP/1.1","title":"Filters"},{"location":"api/filters.html#filters","text":"In some cases, when performing a GET, not all results are desirable. In such a case a filter can be applied to return selective results. A filter can be specified by using a query parameter. Multiple values for the same filter can be given by specifying the filter multiple times. For example, when listing entities using the URL /entities the result may be as below: HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"foo\", \"categories\": [\"a\", \"x\"] }, { \"id\": \"bar\", \"categories\": [\"x\"] } ] If the API supports filtering on category (see the docs of the concerning API), the results can be limited to a certain category by using a filter. For example, to show only entities in category a the following request can be made: GET /entities?category=a HTTP/1.1 When desired, a filter can be applied with multiple values. For example, to show only entities in category a and category x the following request can be made: GET /entities?category=a&category=x HTTP/1.1","title":"Filters"},{"location":"api/groups.html","text":"Groups Users can be part of zero or multiple groups. Create a group URL POST /groups HTTP/1.1 Input Name Type Description id string Optional A unique identifier. If none is given, one is generated. name string Required The name of the group. categories string[] Optional A list of ids of categories that are assigned to the group. Request POST /groups HTTP/1.1 Accept: application/json Content-Type: application/json { \"id\": \"GROUP_1\", \"name\": \"First Grade\", \"categories\": [\"5066549580791808\"] } Response HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"GROUP_1\", \"name\": \"First Grade\", \"categories\": [\"5066549580791808\"] } List groups URL GET /groups HTTP/1.1 Request GET /groups HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"GROUP_1\", \"name\": \"First Grade\", \"categories\": [\"5066549580791808\"] }, { \"id\": \"GROUP_2\", \"name\": \"Second Grade\", \"categories\": [\"9738482397896533\"] } ] Get a single group URL GET /groups/:group HTTP/1.1 group - Required The identifier of the group. Request GET /groups/GROUP_1 HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"GROUP_1\", \"name\": \"First Grade\", \"categories\": [\"5066549580791808\"] }","title":"Groups"},{"location":"api/groups.html#groups","text":"Users can be part of zero or multiple groups.","title":"Groups"},{"location":"api/groups.html#create-a-group","text":"","title":"Create a group"},{"location":"api/groups.html#url","text":"POST /groups HTTP/1.1","title":"URL"},{"location":"api/groups.html#input","text":"Name Type Description id string Optional A unique identifier. If none is given, one is generated. name string Required The name of the group. categories string[] Optional A list of ids of categories that are assigned to the group.","title":"Input"},{"location":"api/groups.html#request","text":"POST /groups HTTP/1.1 Accept: application/json Content-Type: application/json { \"id\": \"GROUP_1\", \"name\": \"First Grade\", \"categories\": [\"5066549580791808\"] }","title":"Request"},{"location":"api/groups.html#response","text":"HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"GROUP_1\", \"name\": \"First Grade\", \"categories\": [\"5066549580791808\"] }","title":"Response"},{"location":"api/groups.html#list-groups","text":"","title":"List groups"},{"location":"api/groups.html#url_1","text":"GET /groups HTTP/1.1","title":"URL"},{"location":"api/groups.html#request_1","text":"GET /groups HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/groups.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"GROUP_1\", \"name\": \"First Grade\", \"categories\": [\"5066549580791808\"] }, { \"id\": \"GROUP_2\", \"name\": \"Second Grade\", \"categories\": [\"9738482397896533\"] } ]","title":"Response"},{"location":"api/groups.html#get-a-single-group","text":"","title":"Get a single group"},{"location":"api/groups.html#url_2","text":"GET /groups/:group HTTP/1.1 group - Required The identifier of the group.","title":"URL"},{"location":"api/groups.html#request_2","text":"GET /groups/GROUP_1 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/groups.html#response_2","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"GROUP_1\", \"name\": \"First Grade\", \"categories\": [\"5066549580791808\"] }","title":"Response"},{"location":"api/jsonp.html","text":"JSON-P Callbacks You can send a ?callback parameter to any GET call to have the results wrapped in a JavaScript function. This is typically used when browsers want to embed content in web pages by getting around cross domain issues. The response includes the same data output as the regular API, plus the relevant HTTP Header information. curl \"https://api.itslanguage.io?callback=foo\" foo({ \"meta\": { \"status\": 200, \"Link\": [ // pagination headers and other links [\"https://api.itslanguage.io?cursor=next2\", {\"rel\": \"next\"}] ] }, \"data\": { // the data } }) You can write a JavaScript handler to process the callback like this: function foo(response) { var meta = response.meta var data = response.data console.log(meta) console.log(data) } All of the headers are the same String value as the HTTP Headers with one notable exception: Link. Link headers are pre-parsed for you and come through as an array of [url, options] tuples.","title":"JSON-P Callbacks"},{"location":"api/jsonp.html#json-p-callbacks","text":"You can send a ?callback parameter to any GET call to have the results wrapped in a JavaScript function. This is typically used when browsers want to embed content in web pages by getting around cross domain issues. The response includes the same data output as the regular API, plus the relevant HTTP Header information. curl \"https://api.itslanguage.io?callback=foo\" foo({ \"meta\": { \"status\": 200, \"Link\": [ // pagination headers and other links [\"https://api.itslanguage.io?cursor=next2\", {\"rel\": \"next\"}] ] }, \"data\": { // the data } }) You can write a JavaScript handler to process the callback like this: function foo(response) { var meta = response.meta var data = response.data console.log(meta) console.log(data) } All of the headers are the same String value as the HTTP Headers with one notable exception: Link. Link headers are pre-parsed for you and come through as an array of [url, options] tuples.","title":"JSON-P Callbacks"},{"location":"api/oauth2.html","text":"OAuth2 Access tokens may be requested by users to grant them access. An access token can be used to make an authorised request. To do so, the access token should be passed as an authorization request header . Obtain access token An access token can either be requested using a manual request or by using an OAuth2 compatible client. Request To request an access token, a POST request should be done to the access token API. The body should contain the username, password, grant type ( password ) and optional scope. To request an access token for the user tenant with password secret and scope tenant/tenant , the request should look like this: POST https://api.itslanguage.io/tokens HTTP/1.1 Content-Type: application/x-www-form-urlencoded Accept: application/json grant_type=password&username=tenant&password=secret&scope=tenant%2Ftenant Note The scope is required when authenticating as a user in an organisation, using a username and password. This is because a user is only unique within the organisation and there is no way of determining the organisation from the username alone. For a user with the username bob in the organisation org in tenant ten the scope should be tenant/ten/organisation/org/user/bob . When using email authentication, passing the scope is not neccesary. Note The Content-Type of the request is different from the response. Response When the supplied credentials are valid, an access token is returned as a JSON response: HTTP/1.1 200 OK Content-Type: application/json;charset=UTF-8 Cache-Control: no-store Pragma: no-cache { \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJI\", \"token_type\": \"Bearer\", \"scope\": \"tenant/tenant\" } Using the access token The access token can be used to make an authorised request. To do so, the access token should be placed in the Authorization header as a bearer token. Example: GET https://api.itslanguage.io/organisations HTTP/1.1 Accept: application/json Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJI In cases where it is not possible to use the Authorization header, the token can be supplied using a request parameter: GET https://api.itslanguage.io/organisations?access_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJI HTTP/1.1 Note The example access tokens are shortened for demo purposes. Impersonation It is possible to impersonate another user by using the client_credentials grant type and supplying a scope that represents the impersonation target. This can be convenient for a variety of reasons. When a tenant wants to perform authentication for its users instead of using the built in authentication, the tenant can use its credentials to request tokens for its users. The token can be relayed to the end-user so the tenant actually authenticated and impersonated the user. When a top level admin user wants to perform administrative tasks for a tenant/organisation, the admin can impersonate the appropriate tenant/organisation. Impersonation is allowed top-down; a tenant can impersonate an organisation or user but a user can't impersonate any of them. Depending on the user's privileges a user may or may not impersonate. (A tenant admin user may impersonate the same way a tenant can for example.) Example scopes Scope Description user/barry Top level admin user with id barry tenant/ten Tenant with id ten tenant/demo/organisation/org Organisation org in tenant demo tenant/demo/organisation/org/student/stu Student stu in organisation org in tenant demo Request To request an access token a POST request should be done to the access token API. The body ( application/x-www-form-urlencoded ) should contain the target scope and the grant type ( client_credentials ). The request should also contain a previously received access token in the Authorization header as described in Using the access token . Example request: POST https://api.itslanguage.io/tokens HTTP/1.1 Content-Type: application/x-www-form-urlencoded Accept: application/json Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJI grant_type=client_credentials&scope=tenant%2Facmecorp If the authentication succeeds the access token is returned as usual Note If no scope is supplied (which is valid in the OAuth2 spec), an access token for the current user is returned (meaning no impersonation takes place).","title":"OAuth2"},{"location":"api/oauth2.html#oauth2","text":"Access tokens may be requested by users to grant them access. An access token can be used to make an authorised request. To do so, the access token should be passed as an authorization request header .","title":"OAuth2"},{"location":"api/oauth2.html#obtain-access-token","text":"An access token can either be requested using a manual request or by using an OAuth2 compatible client.","title":"Obtain access token"},{"location":"api/oauth2.html#request","text":"To request an access token, a POST request should be done to the access token API. The body should contain the username, password, grant type ( password ) and optional scope. To request an access token for the user tenant with password secret and scope tenant/tenant , the request should look like this: POST https://api.itslanguage.io/tokens HTTP/1.1 Content-Type: application/x-www-form-urlencoded Accept: application/json grant_type=password&username=tenant&password=secret&scope=tenant%2Ftenant Note The scope is required when authenticating as a user in an organisation, using a username and password. This is because a user is only unique within the organisation and there is no way of determining the organisation from the username alone. For a user with the username bob in the organisation org in tenant ten the scope should be tenant/ten/organisation/org/user/bob . When using email authentication, passing the scope is not neccesary. Note The Content-Type of the request is different from the response.","title":"Request"},{"location":"api/oauth2.html#response","text":"When the supplied credentials are valid, an access token is returned as a JSON response: HTTP/1.1 200 OK Content-Type: application/json;charset=UTF-8 Cache-Control: no-store Pragma: no-cache { \"access_token\": \"eyJ0eXAiOiJKV1QiLCJhbGciOiJI\", \"token_type\": \"Bearer\", \"scope\": \"tenant/tenant\" }","title":"Response"},{"location":"api/oauth2.html#using-the-access-token","text":"The access token can be used to make an authorised request. To do so, the access token should be placed in the Authorization header as a bearer token. Example: GET https://api.itslanguage.io/organisations HTTP/1.1 Accept: application/json Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJI In cases where it is not possible to use the Authorization header, the token can be supplied using a request parameter: GET https://api.itslanguage.io/organisations?access_token=eyJ0eXAiOiJKV1QiLCJhbGciOiJI HTTP/1.1 Note The example access tokens are shortened for demo purposes.","title":"Using the access token"},{"location":"api/oauth2.html#impersonation","text":"It is possible to impersonate another user by using the client_credentials grant type and supplying a scope that represents the impersonation target. This can be convenient for a variety of reasons. When a tenant wants to perform authentication for its users instead of using the built in authentication, the tenant can use its credentials to request tokens for its users. The token can be relayed to the end-user so the tenant actually authenticated and impersonated the user. When a top level admin user wants to perform administrative tasks for a tenant/organisation, the admin can impersonate the appropriate tenant/organisation. Impersonation is allowed top-down; a tenant can impersonate an organisation or user but a user can't impersonate any of them. Depending on the user's privileges a user may or may not impersonate. (A tenant admin user may impersonate the same way a tenant can for example.)","title":"Impersonation"},{"location":"api/oauth2.html#example-scopes","text":"Scope Description user/barry Top level admin user with id barry tenant/ten Tenant with id ten tenant/demo/organisation/org Organisation org in tenant demo tenant/demo/organisation/org/student/stu Student stu in organisation org in tenant demo","title":"Example scopes"},{"location":"api/oauth2.html#request_1","text":"To request an access token a POST request should be done to the access token API. The body ( application/x-www-form-urlencoded ) should contain the target scope and the grant type ( client_credentials ). The request should also contain a previously received access token in the Authorization header as described in Using the access token . Example request: POST https://api.itslanguage.io/tokens HTTP/1.1 Content-Type: application/x-www-form-urlencoded Accept: application/json Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJI grant_type=client_credentials&scope=tenant%2Facmecorp If the authentication succeeds the access token is returned as usual Note If no scope is supplied (which is valid in the OAuth2 spec), an access token for the current user is returned (meaning no impersonation takes place).","title":"Request"},{"location":"api/organisations.html","text":"Organisations List all organisations URL GET /organisations HTTP/1.1 Request parameters Name Type Description sort string Optional What to sort results by. Can be either created , updated or name . Default: created . direction string Optional The direction of the sort. Can be either asc or desc . Default: desc . Response The response contains a list of organisations. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"23\", \"created\": \"2008-08-06T19:37:40Z\", \"updated\": \"2010-09-21T14:26:15Z\", \"name\": \"School of silly walks\" }, { \"id\": \"walamaloo\", \"created\": \"2002-06-19T11:19:52Z\", \"updated\": \"2011-03-12T16:20:17Z\", \"name\": \"University of Walamaloo\" } ] Get a single organisation URL GET /organisations/:organisation HTTP/1.1 organisation - Required The identifier of the organisation. Request GET /organisations/23 HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"23\", \"created\": \"2000-04-17T19:20:23Z\", \"updated\": \"2001-12-14T07:38:45Z\", \"name\": \"School of silly walks\" } Create an organisation URL POST /organisation HTTP/1.1 Input Name Type Description id string Optional The organisation identifier. If none is given, one is generated. name string Required The name of the organisation. Request POST /organisation HTTP/1.1 Accept: application/json Content-Type: application/json { \"id\": \"walamaloo\", \"name\": \"University of Walamaloo\" } Response HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"walamaloo\", \"created\": \"2002-06-19T11:19:52Z\", \"updated\": \"2011-03-12T16:20:17Z\", \"name\": \"University of Walamaloo\" }","title":"Organisations"},{"location":"api/organisations.html#organisations","text":"","title":"Organisations"},{"location":"api/organisations.html#list-all-organisations","text":"","title":"List all organisations"},{"location":"api/organisations.html#url","text":"GET /organisations HTTP/1.1","title":"URL"},{"location":"api/organisations.html#request-parameters","text":"Name Type Description sort string Optional What to sort results by. Can be either created , updated or name . Default: created . direction string Optional The direction of the sort. Can be either asc or desc . Default: desc .","title":"Request parameters"},{"location":"api/organisations.html#response","text":"The response contains a list of organisations. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"23\", \"created\": \"2008-08-06T19:37:40Z\", \"updated\": \"2010-09-21T14:26:15Z\", \"name\": \"School of silly walks\" }, { \"id\": \"walamaloo\", \"created\": \"2002-06-19T11:19:52Z\", \"updated\": \"2011-03-12T16:20:17Z\", \"name\": \"University of Walamaloo\" } ]","title":"Response"},{"location":"api/organisations.html#get-a-single-organisation","text":"","title":"Get a single organisation"},{"location":"api/organisations.html#url_1","text":"GET /organisations/:organisation HTTP/1.1 organisation - Required The identifier of the organisation.","title":"URL"},{"location":"api/organisations.html#request","text":"GET /organisations/23 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/organisations.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"23\", \"created\": \"2000-04-17T19:20:23Z\", \"updated\": \"2001-12-14T07:38:45Z\", \"name\": \"School of silly walks\" }","title":"Response"},{"location":"api/organisations.html#create-an-organisation","text":"","title":"Create an organisation"},{"location":"api/organisations.html#url_2","text":"POST /organisation HTTP/1.1","title":"URL"},{"location":"api/organisations.html#input","text":"Name Type Description id string Optional The organisation identifier. If none is given, one is generated. name string Required The name of the organisation.","title":"Input"},{"location":"api/organisations.html#request_1","text":"POST /organisation HTTP/1.1 Accept: application/json Content-Type: application/json { \"id\": \"walamaloo\", \"name\": \"University of Walamaloo\" }","title":"Request"},{"location":"api/organisations.html#response_2","text":"HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"walamaloo\", \"created\": \"2002-06-19T11:19:52Z\", \"updated\": \"2011-03-12T16:20:17Z\", \"name\": \"University of Walamaloo\" }","title":"Response"},{"location":"api/pagination.html","text":"Pagination Requests that return multiple items will be paginated to 20 items by default. You can set a custom page size up to 100 with the ?per_page parameter. curl \"https://api.itslanguage.io/resources?per_page=100\" Link Header The pagination info is included in the Link header . It is important to follow these Link header values instead of constructing your own URLs. In some instances, pagination is not based on page number. HTTP/1.1 200 OK Link: <https://api.itslanguage.io/resources?page=for12c&per_page=100>; rel=\"next\", <https://api.itslanguage.io/resources?page=back12c&per_page=100>; rel=\"prev\" Linebreak is included for readability. The possible rel values are: Name Description next The immediate next page of results. prev The immediate previous page of results.","title":"Pagination"},{"location":"api/pagination.html#pagination","text":"Requests that return multiple items will be paginated to 20 items by default. You can set a custom page size up to 100 with the ?per_page parameter. curl \"https://api.itslanguage.io/resources?per_page=100\"","title":"Pagination"},{"location":"api/pagination.html#link-header","text":"The pagination info is included in the Link header . It is important to follow these Link header values instead of constructing your own URLs. In some instances, pagination is not based on page number. HTTP/1.1 200 OK Link: <https://api.itslanguage.io/resources?page=for12c&per_page=100>; rel=\"next\", <https://api.itslanguage.io/resources?page=back12c&per_page=100>; rel=\"prev\" Linebreak is included for readability. The possible rel values are: Name Description next The immediate next page of results. prev The immediate previous page of results.","title":"Link Header"},{"location":"api/parameters.html","text":"Parameters Some API methods take optional parameters. For GET requests, any parameters not specified as a segment in the path can be passed as an HTTP query string parameter. For example when listing entities using the url /entities with some field : curl -i \"https://api.itslanguage.io/entitites/entity?field=magic\" In this example, the 'entity' value is provided for the :entity parameter in the path while :field is passed in the query string. For POST, PUT, and DELETE requests, parameters not included in the URL should be encoded as form data with a Content-Type of 'application/x-www-form-urlencoded': curl -i -d 'field=magic' https://api.itslanguage.io/entities/entity Or the parameters should be encoded as JSON with a Content-Type of 'application/json': curl -i -d '{\"field\": \"value\"}' -H 'application/json' https://api.itslanguage.io/entities/entity","title":"Parameters"},{"location":"api/parameters.html#parameters","text":"Some API methods take optional parameters. For GET requests, any parameters not specified as a segment in the path can be passed as an HTTP query string parameter. For example when listing entities using the url /entities with some field : curl -i \"https://api.itslanguage.io/entitites/entity?field=magic\" In this example, the 'entity' value is provided for the :entity parameter in the path while :field is passed in the query string. For POST, PUT, and DELETE requests, parameters not included in the URL should be encoded as form data with a Content-Type of 'application/x-www-form-urlencoded': curl -i -d 'field=magic' https://api.itslanguage.io/entities/entity Or the parameters should be encoded as JSON with a Content-Type of 'application/json': curl -i -d '{\"field\": \"value\"}' -H 'application/json' https://api.itslanguage.io/entities/entity","title":"Parameters"},{"location":"api/permissions.html","text":"Permissions and roles All users in the ITSLanguage framework have at least one role. Along with a role comes a set of permissions. Each API call in the system requires a certain permission. Roles Roles in the ITSLanguage framework Role Description STUDENT A student ORGANISATION An organisation TENANT A tenant Permissions Below are the permissions per role in a single table. Permissions \\ Roles TENANT ORGANISATION STUDENT TEACHER ANNOTATOR_FULL ANNOTATOR_BASE ANNOTATION_CREATE X X ANNOTATION_DELETE X X ANNOTATION_EDIT X X ANNOTATION_LIST X X ASSIGNMENT_LIST X X AUDIO_ANALYSIS_CREATE X X X X AUDIO_ANALYSIS_LIST X X X X AUDIO_RECOGNITION_CREATE X X AUDIO_RECOGNITION_LIST X X X CATEGORY_CREATE X X CATEGORY_LIST X X X X X CHALLENGE_CREATE X X CHALLENGE_DELETE X X X CHALLENGE_EDIT X X X CHALLENGE_LIST X X X X X X CHOICE_CHALLENGE_CREATE X CHOICE_CHALLENGE_DELETE X CHOICE_CHALLENGE_LIST X X X DOWNLOAD X X X X X X FEEDBACK_CREATE X GROUP_CREATE X X GROUP_LIST X X X X X ORGANISATION_CREATE X ORGANISATION_LIST X SPEECH_RECORDING_CREATE X X SPEECH_RECORDING_LIST X X X X X X USER_CREATE X X X USER_LIST X X X X X If a call is made with an invalid scope gained from an OAuth2 Token and thus with insufficient permissions, a 403 Forbidden response is returned.","title":"Permissions"},{"location":"api/permissions.html#permissions-and-roles","text":"All users in the ITSLanguage framework have at least one role. Along with a role comes a set of permissions. Each API call in the system requires a certain permission.","title":"Permissions and roles"},{"location":"api/permissions.html#roles","text":"Roles in the ITSLanguage framework Role Description STUDENT A student ORGANISATION An organisation TENANT A tenant","title":"Roles"},{"location":"api/permissions.html#permissions","text":"Below are the permissions per role in a single table. Permissions \\ Roles TENANT ORGANISATION STUDENT TEACHER ANNOTATOR_FULL ANNOTATOR_BASE ANNOTATION_CREATE X X ANNOTATION_DELETE X X ANNOTATION_EDIT X X ANNOTATION_LIST X X ASSIGNMENT_LIST X X AUDIO_ANALYSIS_CREATE X X X X AUDIO_ANALYSIS_LIST X X X X AUDIO_RECOGNITION_CREATE X X AUDIO_RECOGNITION_LIST X X X CATEGORY_CREATE X X CATEGORY_LIST X X X X X CHALLENGE_CREATE X X CHALLENGE_DELETE X X X CHALLENGE_EDIT X X X CHALLENGE_LIST X X X X X X CHOICE_CHALLENGE_CREATE X CHOICE_CHALLENGE_DELETE X CHOICE_CHALLENGE_LIST X X X DOWNLOAD X X X X X X FEEDBACK_CREATE X GROUP_CREATE X X GROUP_LIST X X X X X ORGANISATION_CREATE X ORGANISATION_LIST X SPEECH_RECORDING_CREATE X X SPEECH_RECORDING_LIST X X X X X X USER_CREATE X X X USER_LIST X X X X X If a call is made with an invalid scope gained from an OAuth2 Token and thus with insufficient permissions, a 403 Forbidden response is returned.","title":"Permissions"},{"location":"api/profiles.html","text":"Profiles A user does not require a profile, providing this information is optional. Providing profile information is recommended. Accurate profile information helps to train the speech models and improves the quality. Create a profile Link a profile to a user. If a user already has a profile, modified parameters will be overwritten. URL POST /users/:userId/profile HTTP/1.1 Input Name Type Description birthYear int Optional The user's year of birth. gender string Optional The user's gender (\"m\" = male, \"f\" = female, \"x\" = other). country string Optional The country of the user's mother tongue. language string Optional The language of the user's mother tongue. In ISO 639-2 format. cefr int Optional The user's CEFR level. cefr The \"cefr\" input parameter is an integer value which maps to official CEFR values, for more information see: CEFR (Common European Framework of Reference) . int Value 0 no score 1 < A1 2 A1 3 A2 4 A2+ 5 B1 6 B1+ 7 B2 8 B2+ 9 C1 10 C2 Request POST /users HTTP/1.1 Accept: application/json Content-Type: application/json { \"birthYear\": 1923, \"gender\": \"m\", \"country\": \"Netherlands\", \"language\": \"nld\", \"cefr\": 1 } Response HTTP/1.1 201 Created Content-Type: application/json { \"birthYear\": 1923, \"gender\": \"m\", \"country\": \"Netherlands\", \"language\": \"nld\", \"cefr\": 1, \"created\": \"2016-12-22T02:14:05Z\", \"updated\": \"2016-12-22T02:14:05Z\" } Get the profile of a user URL GET /users/:userId/profile HTTP/1.1 Request GET /users/user_23/profile HTTP/1.1 Accept: application/json Response HTTP/1.1 200 Created Content-Type: application/json { \"birthYear\": 1923, \"gender\": \"m\", \"country\": \"Netherlands\", \"language\": \"nld\", \"cefr\": 1, \"created\": \"2017-01-03T12:16:55Z\", \"updated\": \"2017-01-03T12:16:55Z\" } Get the profile of the current user URL GET /user/profile HTTP/1.1 Request GET /user/profile HTTP/1.1 Accept: application/json Response HTTP/1.1 200 Created Content-Type: application/json { \"birthYear\": 1923, \"gender\": \"m\", \"country\": \"Netherlands\", \"language\": \"nld\", \"cefr\": 1, \"created\": \"2017-01-03T12:16:55Z\", \"updated\": \"2017-01-03T12:16:55Z\" }","title":"Profiles"},{"location":"api/profiles.html#profiles","text":"A user does not require a profile, providing this information is optional. Providing profile information is recommended. Accurate profile information helps to train the speech models and improves the quality.","title":"Profiles"},{"location":"api/profiles.html#create-a-profile","text":"Link a profile to a user. If a user already has a profile, modified parameters will be overwritten.","title":"Create a profile"},{"location":"api/profiles.html#url","text":"POST /users/:userId/profile HTTP/1.1","title":"URL"},{"location":"api/profiles.html#input","text":"Name Type Description birthYear int Optional The user's year of birth. gender string Optional The user's gender (\"m\" = male, \"f\" = female, \"x\" = other). country string Optional The country of the user's mother tongue. language string Optional The language of the user's mother tongue. In ISO 639-2 format. cefr int Optional The user's CEFR level.","title":"Input"},{"location":"api/profiles.html#cefr","text":"The \"cefr\" input parameter is an integer value which maps to official CEFR values, for more information see: CEFR (Common European Framework of Reference) . int Value 0 no score 1 < A1 2 A1 3 A2 4 A2+ 5 B1 6 B1+ 7 B2 8 B2+ 9 C1 10 C2","title":"cefr"},{"location":"api/profiles.html#request","text":"POST /users HTTP/1.1 Accept: application/json Content-Type: application/json { \"birthYear\": 1923, \"gender\": \"m\", \"country\": \"Netherlands\", \"language\": \"nld\", \"cefr\": 1 }","title":"Request"},{"location":"api/profiles.html#response","text":"HTTP/1.1 201 Created Content-Type: application/json { \"birthYear\": 1923, \"gender\": \"m\", \"country\": \"Netherlands\", \"language\": \"nld\", \"cefr\": 1, \"created\": \"2016-12-22T02:14:05Z\", \"updated\": \"2016-12-22T02:14:05Z\" }","title":"Response"},{"location":"api/profiles.html#get-the-profile-of-a-user","text":"","title":"Get the profile of a user"},{"location":"api/profiles.html#url_1","text":"GET /users/:userId/profile HTTP/1.1","title":"URL"},{"location":"api/profiles.html#request_1","text":"GET /users/user_23/profile HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/profiles.html#response_1","text":"HTTP/1.1 200 Created Content-Type: application/json { \"birthYear\": 1923, \"gender\": \"m\", \"country\": \"Netherlands\", \"language\": \"nld\", \"cefr\": 1, \"created\": \"2017-01-03T12:16:55Z\", \"updated\": \"2017-01-03T12:16:55Z\" }","title":"Response"},{"location":"api/profiles.html#get-the-profile-of-the-current-user","text":"","title":"Get the profile of the current user"},{"location":"api/profiles.html#url_2","text":"GET /user/profile HTTP/1.1","title":"URL"},{"location":"api/profiles.html#request_2","text":"GET /user/profile HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/profiles.html#response_2","text":"HTTP/1.1 200 Created Content-Type: application/json { \"birthYear\": 1923, \"gender\": \"m\", \"country\": \"Netherlands\", \"language\": \"nld\", \"cefr\": 1, \"created\": \"2017-01-03T12:16:55Z\", \"updated\": \"2017-01-03T12:16:55Z\" }","title":"Response"},{"location":"api/progress.html","text":"Progress Get progress of a category The progress of a category (or actually, challenges in a category) can be requested by a user. The progress is returned for the current user. URL GET /categories/:category/progress HTTP/1.1 category - Required The category id. Request GET /categories/:category/progress HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json [ { \"category\": \"lo_1\", \"percentage\": 50, \"user\": { \"id\": \"user_1\", \"firstName\": \"Martin\", \"infix\": \"van\", \"lastName\": \"Nostrand\" }, \"challenges\": [ { \"id\": \"chal_1\", \"referenceAudioUrl\": \"http://example.com/audio.mp3\", \"recordingSet\": { \"id\": \"5600160f578c4db6b7b0327e16e42153\", \"combinedAudioUrl\": \"http://example.com/fullaudio.mp3\", \"recordings\": [ { \"id\": \"rec_1\", \"audioUrl\": \"http://example.com/audio.mp3\" }, { \"id\": \"rec_2\", \"audioUrl\": \"http://example.com/audio.mp3\" } ] } }, { \"id\": \"chal_2\", \"referenceAudioUrl\": \"http://example.com/audio.mp3\", \"recordingSet\": null } ] } ] Get progress of a category for multiple users Getting progress for multiple users is possible by supplying groups when requesting progress. Progress is then fetched for users in the selected groups. Groups can be selected by using the group query param. The param can be given multiple times to select multiple groups. GET /categories/:category/progress?group=group_1&group=group_2 HTTP/1.1 Accept: application/json Filters The following filters may be applied: Name Description role The id of the role that a user should be in.","title":"Progress"},{"location":"api/progress.html#progress","text":"","title":"Progress"},{"location":"api/progress.html#get-progress-of-a-category","text":"The progress of a category (or actually, challenges in a category) can be requested by a user. The progress is returned for the current user.","title":"Get progress of a category"},{"location":"api/progress.html#url","text":"GET /categories/:category/progress HTTP/1.1 category - Required The category id.","title":"URL"},{"location":"api/progress.html#request","text":"GET /categories/:category/progress HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/progress.html#response","text":"HTTP/1.1 200 OK Content-Type: application/json [ { \"category\": \"lo_1\", \"percentage\": 50, \"user\": { \"id\": \"user_1\", \"firstName\": \"Martin\", \"infix\": \"van\", \"lastName\": \"Nostrand\" }, \"challenges\": [ { \"id\": \"chal_1\", \"referenceAudioUrl\": \"http://example.com/audio.mp3\", \"recordingSet\": { \"id\": \"5600160f578c4db6b7b0327e16e42153\", \"combinedAudioUrl\": \"http://example.com/fullaudio.mp3\", \"recordings\": [ { \"id\": \"rec_1\", \"audioUrl\": \"http://example.com/audio.mp3\" }, { \"id\": \"rec_2\", \"audioUrl\": \"http://example.com/audio.mp3\" } ] } }, { \"id\": \"chal_2\", \"referenceAudioUrl\": \"http://example.com/audio.mp3\", \"recordingSet\": null } ] } ]","title":"Response"},{"location":"api/progress.html#get-progress-of-a-category-for-multiple-users","text":"Getting progress for multiple users is possible by supplying groups when requesting progress. Progress is then fetched for users in the selected groups. Groups can be selected by using the group query param. The param can be given multiple times to select multiple groups. GET /categories/:category/progress?group=group_1&group=group_2 HTTP/1.1 Accept: application/json","title":"Get progress of a category for multiple users"},{"location":"api/progress.html#filters","text":"The following filters may be applied: Name Description role The id of the role that a user should be in.","title":"Filters"},{"location":"api/pronunciation_challenges.html","text":"Pronunciation Challenges A text transcription with reference audio allow a detailed, phoneme level analysis on user submitted audio. List all pronunciation challenges URL GET /challenges/pronunciation HTTP/1.1 Request GET /challenges/pronunciation HTTP/1.1 Accept: application/json Response The response is a JSON list with pronunciation challenges. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"pronunciation_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"transcription\": \"You could take the baby with you\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"status\": \"preparing\", \"alignment\": null }, { \"id\": \"12\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"transcription\": \"tap\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu6-Abq\", \"status\": \"prepared\", \"alignment\": { \"confidenceScore\": -3.44, \"words\": [ { \"chunks\": [ { \"graphemes\": \"t\", \"phonemes\": [ { \"start\": 0.25, \"end\": 0.45, \"confidenceScore\": -2.8149, \"ipa\": \"t\" } ] }, { \"graphemes\": \"a\", \"phonemes\": [ { \"start\": 0.45, \"end\": 0.67, \"confidenceScore\": -0.7412, \"ipa\": \"ae\" } ] }, { \"graphemes\": \"p\", \"phonemes\": [ { \"start\": 0.67, \"end\": 0.84, \"confidenceScore\": -6.7516, \"ipa\": \"p\" } ] } ] } ] } } ] Get a single pronunciation challenge URL GET /challenges/pronunciation/:challenge HTTP/1.1 challenge - Required The pronunciation challenge identifier. Request GET /challenges/pronunciation/pronunciaton_1 HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"12\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"transcription\": \"tap\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu6-Abq\", \"status\": \"prepared\", \"alignment\": { \"confidenceScore\": -3.44, \"words\": [ { \"chunks\": [ { \"phonemes\": [ { \"start\": 0.25, \"ipa\": \"t\", \"end\": 0.45, \"confidenceScore\": -2.8149 } ], \"graphemes\": \"t\" }, { \"phonemes\": [ { \"start\": 0.45, \"ipa\": \"ae\", \"end\": 0.67, \"confidenceScore\": -0.7412 } ], \"graphemes\": \"a\" }, { \"phonemes\": [ { \"start\": 0.67, \"ipa\": \"p\", \"end\": 0.84, \"confidenceScore\": -6.7516 } ], \"graphemes\": \"p\" } ] } ] } } Create a pronunciation challenge URL POST /challenges/pronunciation HTTP/1.1 Request parameters Name Type Description id string Optional The pronunciation challenge identifier. If none is given, one is generated. transcription string Required The spoken word or sentence as plain text. referenceAudio blob Required The reference audio fragment. Request POST /challenges/pronunciation HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"referenceAudio\"; filename=\"blob\" Content-Type: audio/ogg <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"transcription\" You could take the baby with you --jhgd87g7Gy3d78-- Response HTTP/1.1 201 Created Content-Type: application/json Location: https://api.itslanguage.io/challenges/pronunciation/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"transcription\": \"You could take the baby with you\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"status\": \"preparing\", \"alignment\": null } Update a pronunciation challenge URL PUT /challenges/pronunciation/:challenge HTTP/1.1 challenge - Required The pronunciation challenge identifier. Update one or more properties of an existing pronunciation challenge. Request parameters Name Type Description transcription string Optional The spoken word or sentence in plain text. referenceAudio blob Optional The reference audio fragment. status string Optional The status of the challenge (unprepared, preparing, prepared). alignment object Optional The alignment of the challenge. Request PUT /challenges/pronunciation/4 HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"transcription\" tap --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"referenceAudio\"; filename=\"blob\" Content-Type: audio/ogg <blob> Content-Disposition: form-data; name=\"status\" prepared --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"aignment\" Content-Type: application/json {\"confidenceScore\": -3.44, \"words\": [....]} --jhgd87g7Gy3d78-- Response HTTP/1.1 200 OK Content-Type: application/json Location: https://api.itslanguage.io/challenges/pronunciation/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"transcription\": \"You could take the baby with you\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-Abc\", \"status\": \"prepared\", \"alignment\": {\"confidenceScore\": -3.44, \"words\": [....]} } Delete a single pronunciation challenge URL DELETE /challenges/pronunciation/:challenge HTTP/1.1 challenge - Required The choice challenge identifier. Request DELETE /challenges/pronunciation/choice_1 HTTP/1.1 Response HTTP/1.1 204 No Content","title":"Pronunciation"},{"location":"api/pronunciation_challenges.html#pronunciation-challenges","text":"A text transcription with reference audio allow a detailed, phoneme level analysis on user submitted audio.","title":"Pronunciation Challenges"},{"location":"api/pronunciation_challenges.html#list-all-pronunciation-challenges","text":"","title":"List all pronunciation challenges"},{"location":"api/pronunciation_challenges.html#url","text":"GET /challenges/pronunciation HTTP/1.1","title":"URL"},{"location":"api/pronunciation_challenges.html#request","text":"GET /challenges/pronunciation HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/pronunciation_challenges.html#response","text":"The response is a JSON list with pronunciation challenges. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"pronunciation_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"transcription\": \"You could take the baby with you\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"status\": \"preparing\", \"alignment\": null }, { \"id\": \"12\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"transcription\": \"tap\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu6-Abq\", \"status\": \"prepared\", \"alignment\": { \"confidenceScore\": -3.44, \"words\": [ { \"chunks\": [ { \"graphemes\": \"t\", \"phonemes\": [ { \"start\": 0.25, \"end\": 0.45, \"confidenceScore\": -2.8149, \"ipa\": \"t\" } ] }, { \"graphemes\": \"a\", \"phonemes\": [ { \"start\": 0.45, \"end\": 0.67, \"confidenceScore\": -0.7412, \"ipa\": \"ae\" } ] }, { \"graphemes\": \"p\", \"phonemes\": [ { \"start\": 0.67, \"end\": 0.84, \"confidenceScore\": -6.7516, \"ipa\": \"p\" } ] } ] } ] } } ]","title":"Response"},{"location":"api/pronunciation_challenges.html#get-a-single-pronunciation-challenge","text":"","title":"Get a single pronunciation challenge"},{"location":"api/pronunciation_challenges.html#url_1","text":"GET /challenges/pronunciation/:challenge HTTP/1.1 challenge - Required The pronunciation challenge identifier.","title":"URL"},{"location":"api/pronunciation_challenges.html#request_1","text":"GET /challenges/pronunciation/pronunciaton_1 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/pronunciation_challenges.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"12\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"transcription\": \"tap\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu6-Abq\", \"status\": \"prepared\", \"alignment\": { \"confidenceScore\": -3.44, \"words\": [ { \"chunks\": [ { \"phonemes\": [ { \"start\": 0.25, \"ipa\": \"t\", \"end\": 0.45, \"confidenceScore\": -2.8149 } ], \"graphemes\": \"t\" }, { \"phonemes\": [ { \"start\": 0.45, \"ipa\": \"ae\", \"end\": 0.67, \"confidenceScore\": -0.7412 } ], \"graphemes\": \"a\" }, { \"phonemes\": [ { \"start\": 0.67, \"ipa\": \"p\", \"end\": 0.84, \"confidenceScore\": -6.7516 } ], \"graphemes\": \"p\" } ] } ] } }","title":"Response"},{"location":"api/pronunciation_challenges.html#create-a-pronunciation-challenge","text":"","title":"Create a pronunciation challenge"},{"location":"api/pronunciation_challenges.html#url_2","text":"POST /challenges/pronunciation HTTP/1.1","title":"URL"},{"location":"api/pronunciation_challenges.html#request-parameters","text":"Name Type Description id string Optional The pronunciation challenge identifier. If none is given, one is generated. transcription string Required The spoken word or sentence as plain text. referenceAudio blob Required The reference audio fragment.","title":"Request parameters"},{"location":"api/pronunciation_challenges.html#request_2","text":"POST /challenges/pronunciation HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"referenceAudio\"; filename=\"blob\" Content-Type: audio/ogg <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"transcription\" You could take the baby with you --jhgd87g7Gy3d78--","title":"Request"},{"location":"api/pronunciation_challenges.html#response_2","text":"HTTP/1.1 201 Created Content-Type: application/json Location: https://api.itslanguage.io/challenges/pronunciation/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"transcription\": \"You could take the baby with you\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"status\": \"preparing\", \"alignment\": null }","title":"Response"},{"location":"api/pronunciation_challenges.html#update-a-pronunciation-challenge","text":"","title":"Update a pronunciation challenge"},{"location":"api/pronunciation_challenges.html#url_3","text":"PUT /challenges/pronunciation/:challenge HTTP/1.1 challenge - Required The pronunciation challenge identifier. Update one or more properties of an existing pronunciation challenge.","title":"URL"},{"location":"api/pronunciation_challenges.html#request-parameters_1","text":"Name Type Description transcription string Optional The spoken word or sentence in plain text. referenceAudio blob Optional The reference audio fragment. status string Optional The status of the challenge (unprepared, preparing, prepared). alignment object Optional The alignment of the challenge.","title":"Request parameters"},{"location":"api/pronunciation_challenges.html#request_3","text":"PUT /challenges/pronunciation/4 HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"transcription\" tap --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"referenceAudio\"; filename=\"blob\" Content-Type: audio/ogg <blob> Content-Disposition: form-data; name=\"status\" prepared --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"aignment\" Content-Type: application/json {\"confidenceScore\": -3.44, \"words\": [....]} --jhgd87g7Gy3d78--","title":"Request"},{"location":"api/pronunciation_challenges.html#response_3","text":"HTTP/1.1 200 OK Content-Type: application/json Location: https://api.itslanguage.io/challenges/pronunciation/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"transcription\": \"You could take the baby with you\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-Abc\", \"status\": \"prepared\", \"alignment\": {\"confidenceScore\": -3.44, \"words\": [....]} }","title":"Response"},{"location":"api/pronunciation_challenges.html#delete-a-single-pronunciation-challenge","text":"","title":"Delete a single pronunciation challenge"},{"location":"api/pronunciation_challenges.html#url_4","text":"DELETE /challenges/pronunciation/:challenge HTTP/1.1 challenge - Required The choice challenge identifier.","title":"URL"},{"location":"api/pronunciation_challenges.html#request_4","text":"DELETE /challenges/pronunciation/choice_1 HTTP/1.1","title":"Request"},{"location":"api/pronunciation_challenges.html#response_4","text":"HTTP/1.1 204 No Content","title":"Response"},{"location":"api/recognitions.html","text":"Recognitions Speech recognitions can be stored and retrieved for user submitted audio using the ITSLanguage Speech API. The actual recognitions are performed by the ITSLanguage websocket server. Type Usage choice Performs speech recognition on user submitted audio and selects one of the choices. Create a choice recognition Submit an audio fragment for recognition. The recognition is created for the current authenticated user. URL POST /challenges/choice/:challenge/recognitions HTTP/1.1 challenge - Required The challenge identifier. Request parameters Name Type Description id string Optional A unique identifier for the recognition. If none is given, one is generated. audio blob Required The actual audio. (Ogg Opus or WAV) recognised string Optional The recognised string. Omit if nothing is recognised. Request The request should be a multipart/form-data request. POST /challenges/choice/test/recognitions HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"recognised\" bike --jhgd87g7Gy3d78-- Response The audio can be downloaded by opening the audioUrl in the response. HTTP/1.1 201 Created Content-Type: application/json Location: https://api.itslanguage.io/challenges/choice/test/recognitions/8 { \"id\": \"8\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"challengeId\": \"8\", \"userId\": \"24\", \"audioUrl\": \"https://api.itslanguage.io/challenges/choice/test/recognitions/8/audio\", \"recognised\": \"bike\" } List choice recognitions URL GET /challenges/choice/:challenge/recognitions HTTP/1.1 challenge - Required The identifier of the challenge. Response HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"8\", \"updated\": \"2014-07-19T19:22:48Z\", \"created\": \"2014-07-19T19:22:48Z\", \"challengeId\": \"8\", \"userId\": \"harry\", \"audioUrl\": \"https://api.itslanguage.io/challenges/choice/test/recognitions/8/audio\", \"recognised\": \"bright side of life\" }, { \"id\": \"237\", \"updated\": \"2014-07-19T19:22:48Z\", \"created\": \"2014-07-19T19:22:48Z\", \"challengeId\": \"237\", \"userId\": \"arthur\", \"audioUrl\": \"https://api.itslanguage.io/challenges/choice/test/recognitions/237/audio\", \"recognised\": \"spam\" } ] Get a single choice recognition URL GET /challenges/choice/:challenge/recognitions/:recognition HTTP/1.1 challenge - Required The identifier of the challenge. recognition - Required The identifier of the recognition. Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"spam\", \"created\": \"2014-07-19T19:22:48Z\", \"updated\": \"2014-07-19T19:22:48Z\", \"challengeId\": \"spam\", \"userId\": \"87\", \"audioUrl\": \"https://api.itslanguage.io/challenges/choice/test/recognitions/spam/audio\", \"recognised\": null }","title":"Speech Recognition"},{"location":"api/recognitions.html#recognitions","text":"Speech recognitions can be stored and retrieved for user submitted audio using the ITSLanguage Speech API. The actual recognitions are performed by the ITSLanguage websocket server. Type Usage choice Performs speech recognition on user submitted audio and selects one of the choices.","title":"Recognitions"},{"location":"api/recognitions.html#create-a-choice-recognition","text":"Submit an audio fragment for recognition. The recognition is created for the current authenticated user.","title":"Create a choice recognition"},{"location":"api/recognitions.html#url","text":"POST /challenges/choice/:challenge/recognitions HTTP/1.1 challenge - Required The challenge identifier.","title":"URL"},{"location":"api/recognitions.html#request-parameters","text":"Name Type Description id string Optional A unique identifier for the recognition. If none is given, one is generated. audio blob Required The actual audio. (Ogg Opus or WAV) recognised string Optional The recognised string. Omit if nothing is recognised.","title":"Request parameters"},{"location":"api/recognitions.html#request","text":"The request should be a multipart/form-data request. POST /challenges/choice/test/recognitions HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"recognised\" bike --jhgd87g7Gy3d78--","title":"Request"},{"location":"api/recognitions.html#response","text":"The audio can be downloaded by opening the audioUrl in the response. HTTP/1.1 201 Created Content-Type: application/json Location: https://api.itslanguage.io/challenges/choice/test/recognitions/8 { \"id\": \"8\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"challengeId\": \"8\", \"userId\": \"24\", \"audioUrl\": \"https://api.itslanguage.io/challenges/choice/test/recognitions/8/audio\", \"recognised\": \"bike\" }","title":"Response"},{"location":"api/recognitions.html#list-choice-recognitions","text":"","title":"List choice recognitions"},{"location":"api/recognitions.html#url_1","text":"GET /challenges/choice/:challenge/recognitions HTTP/1.1 challenge - Required The identifier of the challenge.","title":"URL"},{"location":"api/recognitions.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"8\", \"updated\": \"2014-07-19T19:22:48Z\", \"created\": \"2014-07-19T19:22:48Z\", \"challengeId\": \"8\", \"userId\": \"harry\", \"audioUrl\": \"https://api.itslanguage.io/challenges/choice/test/recognitions/8/audio\", \"recognised\": \"bright side of life\" }, { \"id\": \"237\", \"updated\": \"2014-07-19T19:22:48Z\", \"created\": \"2014-07-19T19:22:48Z\", \"challengeId\": \"237\", \"userId\": \"arthur\", \"audioUrl\": \"https://api.itslanguage.io/challenges/choice/test/recognitions/237/audio\", \"recognised\": \"spam\" } ]","title":"Response"},{"location":"api/recognitions.html#get-a-single-choice-recognition","text":"","title":"Get a single choice recognition"},{"location":"api/recognitions.html#url_2","text":"GET /challenges/choice/:challenge/recognitions/:recognition HTTP/1.1 challenge - Required The identifier of the challenge. recognition - Required The identifier of the recognition.","title":"URL"},{"location":"api/recognitions.html#response_2","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"spam\", \"created\": \"2014-07-19T19:22:48Z\", \"updated\": \"2014-07-19T19:22:48Z\", \"challengeId\": \"spam\", \"userId\": \"87\", \"audioUrl\": \"https://api.itslanguage.io/challenges/choice/test/recognitions/spam/audio\", \"recognised\": null }","title":"Response"},{"location":"api/recordings.html","text":"Recordings Audio can be stored using the ITSLanguage Speech API. It can optionally be retrieved for processing or playback at a later time. Type Usage speech Record user submitted audio for a speech challenge. List all speech recordings URL GET /challenges/speech/:challenge/recordings HTTP/1.1 challenge - Required The challenge identifier. Request GET /challenges/speech/test/recordings HTTP/1.1 Accept: application/json Response The response is a JSON list with speech recordings. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"recording_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"resultSet\": { \"id\": \"923848397208945\", \"combinedAudioUrl\": \"https://api.itslanguage.io/download/lhsdb78333y78d\" }, \"userId\": \"24\" }, { \"id\": \"14\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-Xaq\", \"resultSet\": { \"id\": \"923848397208945\", \"combinedAudioUrl\": \"https://api.itslanguage.io/download/ksd83gdiuhs7cs\" }, \"userId\": \"24\" } ] Get a single speech recording URL GET /challenges/speech/:challenge/recordings/:recording HTTP/1.1 challenge - Required The challenge identifier. recording - Required The recording identifier. Request GET /challenges/speech/speech_1/recordings/recording_1 HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"speech_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"resultSet\": { \"id\": \"923848397208945\", \"combinedAudioUrl\": \"https://api.itslanguage.io/download/lhsdb78333y78d\" }, \"userId\": \"24\" } Create a speech recording Submit a new audio recording to persist without immediate analysis. The recording is created as the current user. URL POST /challenges/speech/:challenge/recordings HTTP/1.1 challenge - Required The challenge identifier. Request parameters Name Type Description id string Optional The recording identifier. If none is given, one is generated. audio blob Required The actual audio. (Ogg Opus or WAV) resultSetId string Required The unique id of the result set the recording belongs to. See Recording result set . If this doesn't exist one is created. Request The request should be a multipart/form-data . POST /challenges/speech/test/recordings HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=\"YvHKkjjzXfysYJVHMoOAoNczae\" --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <audio blob> --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"resultSetId\" iohfg78h37fgy3ho84 --YvHKkjjzXfysYJVHMoOAoNczae-- Response If the audio was persisted correctly: HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"34\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"resultSet\": { \"id\": \"iohfg78h37fgy3ho84\", \"combinedAudioUrl\": \"https://api.itslanguage.io/download/kljhiusdhwhe811\" }, \"userId\": \"24\" } Recording result set In order to group recordings together a result set is used. The result set contains multiple recordings and an audio file containing all the audio files of its recordings combined. A result set is created automatically whenever a recording is created with a non-existing resultSetId . When the resultSetId does exist the recording is added to this set and the audio of the recording is appended to the audio of the result set. The result set cannot be queried directly but it can be seen when getting progress .","title":"Speech Recordings"},{"location":"api/recordings.html#recordings","text":"Audio can be stored using the ITSLanguage Speech API. It can optionally be retrieved for processing or playback at a later time. Type Usage speech Record user submitted audio for a speech challenge.","title":"Recordings"},{"location":"api/recordings.html#list-all-speech-recordings","text":"","title":"List all speech recordings"},{"location":"api/recordings.html#url","text":"GET /challenges/speech/:challenge/recordings HTTP/1.1 challenge - Required The challenge identifier.","title":"URL"},{"location":"api/recordings.html#request","text":"GET /challenges/speech/test/recordings HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/recordings.html#response","text":"The response is a JSON list with speech recordings. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"recording_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"resultSet\": { \"id\": \"923848397208945\", \"combinedAudioUrl\": \"https://api.itslanguage.io/download/lhsdb78333y78d\" }, \"userId\": \"24\" }, { \"id\": \"14\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-Xaq\", \"resultSet\": { \"id\": \"923848397208945\", \"combinedAudioUrl\": \"https://api.itslanguage.io/download/ksd83gdiuhs7cs\" }, \"userId\": \"24\" } ]","title":"Response"},{"location":"api/recordings.html#get-a-single-speech-recording","text":"","title":"Get a single speech recording"},{"location":"api/recordings.html#url_1","text":"GET /challenges/speech/:challenge/recordings/:recording HTTP/1.1 challenge - Required The challenge identifier. recording - Required The recording identifier.","title":"URL"},{"location":"api/recordings.html#request_1","text":"GET /challenges/speech/speech_1/recordings/recording_1 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/recordings.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"speech_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"resultSet\": { \"id\": \"923848397208945\", \"combinedAudioUrl\": \"https://api.itslanguage.io/download/lhsdb78333y78d\" }, \"userId\": \"24\" }","title":"Response"},{"location":"api/recordings.html#create-a-speech-recording","text":"Submit a new audio recording to persist without immediate analysis. The recording is created as the current user.","title":"Create a speech recording"},{"location":"api/recordings.html#url_2","text":"POST /challenges/speech/:challenge/recordings HTTP/1.1 challenge - Required The challenge identifier.","title":"URL"},{"location":"api/recordings.html#request-parameters","text":"Name Type Description id string Optional The recording identifier. If none is given, one is generated. audio blob Required The actual audio. (Ogg Opus or WAV) resultSetId string Required The unique id of the result set the recording belongs to. See Recording result set . If this doesn't exist one is created.","title":"Request parameters"},{"location":"api/recordings.html#request_2","text":"The request should be a multipart/form-data . POST /challenges/speech/test/recordings HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=\"YvHKkjjzXfysYJVHMoOAoNczae\" --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <audio blob> --YvHKkjjzXfysYJVHMoOAoNczae Content-Disposition: form-data; name=\"resultSetId\" iohfg78h37fgy3ho84 --YvHKkjjzXfysYJVHMoOAoNczae--","title":"Request"},{"location":"api/recordings.html#response_2","text":"If the audio was persisted correctly: HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"34\", \"updated\": \"2014-02-13T09:39:40Z\", \"created\": \"2014-02-13T09:39:37Z\", \"audioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"resultSet\": { \"id\": \"iohfg78h37fgy3ho84\", \"combinedAudioUrl\": \"https://api.itslanguage.io/download/kljhiusdhwhe811\" }, \"userId\": \"24\" }","title":"Response"},{"location":"api/recordings.html#recording-result-set","text":"In order to group recordings together a result set is used. The result set contains multiple recordings and an audio file containing all the audio files of its recordings combined. A result set is created automatically whenever a recording is created with a non-existing resultSetId . When the resultSetId does exist the recording is added to this set and the audio of the recording is appended to the audio of the result set. The result set cannot be queried directly but it can be seen when getting progress .","title":"Recording result set"},{"location":"api/request_response_format.html","text":"Request and Response Format Most endpoints accept and return JSON . Some endpoints accept multipart form data to support submitting binary data (files for example). All endpoints should return JSON for ease of processing. JSON As described in RFC 4627 : JSON text SHALL be encoded in Unicode. The default encoding is UTF-8. Therefore, specifying the encoding with charset=utf-8 in the header is optional, it's an implicit default. When sending JSON the Content-Type header needs to be set to application/json . Example using curl: curl -d '{\"name\": \"sheffield\"}' -H \"Content-Type: application/json\" \\ https://api.itslanguage.io/organisations Blank fields are included as null instead of being omitted. Multipart form data When submitting binary data, like audio fragments, this request format needs to be used. An example form POST looks like this: POST /organisation/crimson/challenges/choice HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"choices\" located --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"choices\" sited --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <spoken audio: located> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/wav <spoken audio: sited> --jhgd87g7Gy3d78-- Repeated fieldnames are accepted and transformed as lists in the given order. More information about this format can be found in RFC 2388 .","title":"Request and response format"},{"location":"api/request_response_format.html#request-and-response-format","text":"Most endpoints accept and return JSON . Some endpoints accept multipart form data to support submitting binary data (files for example). All endpoints should return JSON for ease of processing.","title":"Request and Response Format"},{"location":"api/request_response_format.html#json","text":"As described in RFC 4627 : JSON text SHALL be encoded in Unicode. The default encoding is UTF-8. Therefore, specifying the encoding with charset=utf-8 in the header is optional, it's an implicit default. When sending JSON the Content-Type header needs to be set to application/json . Example using curl: curl -d '{\"name\": \"sheffield\"}' -H \"Content-Type: application/json\" \\ https://api.itslanguage.io/organisations Blank fields are included as null instead of being omitted.","title":"JSON"},{"location":"api/request_response_format.html#multipart-form-data","text":"When submitting binary data, like audio fragments, this request format needs to be used. An example form POST looks like this: POST /organisation/crimson/challenges/choice HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"choices\" located --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"choices\" sited --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/ogg <spoken audio: located> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"audio\"; filename=\"blob\" Content-Type: audio/wav <spoken audio: sited> --jhgd87g7Gy3d78-- Repeated fieldnames are accepted and transformed as lists in the given order. More information about this format can be found in RFC 2388 .","title":"Multipart form data"},{"location":"api/roles.html","text":"Roles Roles are named groups of permissions. A role is typically assigned to a user to grant a user permissions. Get a single role URL GET /roles/:role HTTP/1.1 role - Required The role identifier. Request GET /roles/Student HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"Student\", \"permissions\": [ \"CHOICE_CHALLENGE_CREATE\", \"CHOICE_CHALLENGE_DELETE\" ] } List roles URL GET /roles HTTP/1.1 Request GET /roles HTTP/1.1 Accept: application/json Response HTTP/1.1 201 Created Content-Type: application/json [ { \"name\": \"Admin\", \"permissions\": [ \"CHOICE_CHALLENGE_CREATE\", \"CHOICE_CHALLENGE_DELETE\" ] }, { \"name\": \"Student\", \"permissions\": [ \"CHOICE_CHALLENGE_List\" ] } ]","title":"Roles"},{"location":"api/roles.html#roles","text":"Roles are named groups of permissions. A role is typically assigned to a user to grant a user permissions.","title":"Roles"},{"location":"api/roles.html#get-a-single-role","text":"","title":"Get a single role"},{"location":"api/roles.html#url","text":"GET /roles/:role HTTP/1.1 role - Required The role identifier.","title":"URL"},{"location":"api/roles.html#request","text":"GET /roles/Student HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/roles.html#response","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"Student\", \"permissions\": [ \"CHOICE_CHALLENGE_CREATE\", \"CHOICE_CHALLENGE_DELETE\" ] }","title":"Response"},{"location":"api/roles.html#list-roles","text":"","title":"List roles"},{"location":"api/roles.html#url_1","text":"GET /roles HTTP/1.1","title":"URL"},{"location":"api/roles.html#request_1","text":"GET /roles HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/roles.html#response_1","text":"HTTP/1.1 201 Created Content-Type: application/json [ { \"name\": \"Admin\", \"permissions\": [ \"CHOICE_CHALLENGE_CREATE\", \"CHOICE_CHALLENGE_DELETE\" ] }, { \"name\": \"Student\", \"permissions\": [ \"CHOICE_CHALLENGE_List\" ] } ]","title":"Response"},{"location":"api/speech_challenges.html","text":"Speech Challenges Guide the student in speaking through an optional topic and optional reference audio. List all speech challenges URL GET /challenges/speech HTTP/1.1 Request GET /challenges/speech HTTP/1.1 Accept: application/json Response The response is a JSON list with speech challenges. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"speech_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"topic\": \"What do you know about babies?\", \"language\": \"eng\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"srtUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"imageUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"metadata\": null }, { \"id\": \"12\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"language\": \"eng\", \"topic\": \"Book\", \"referenceAudioUrl\": null, \"srtUrl\": null, \"imageUrl\": null, \"metadata\": null } ] Get a single speech challenge URL GET /challenges/speech/:challenge HTTP/1.1 challenge - Required The speech challenge identifier. Request GET /challenges/speech/speech_1 HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"speech_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"topic\": \"What do you know about babies?\", \"language\": \"eng\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"srtUrl\": \"https://api.itslanguage.io/download/zVXLJJuGyhBHQbfX\", \"imageUrl\": \"https://api.itslanguage.io/download/dlnBo-dotLpnhN-a\", \"metadata\": null } Create a speech challenge URL POST /challenges/speech HTTP/1.1 Request parameters Name Type Description id string Optional The speech challenge identifier. If none is given, one is generated. topic string Optional A question or topic serving as guidance to the student. language string Required Language of the challenge in ISO 639-2 format. referenceAudio blob Optional The reference audio fragment. srt blob Optional The transcription of the challenge in .srt format. image blob Optional An image to show with the challenge. metadata string Optional Client specific properties that are not validated nor filtered. Request POST /challenges/speech HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"referenceAudio\"; filename=\"blob\" Content-Type: audio/ogg <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"topic\" What do you know about babies? --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"language\" eng --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"srt\"; filename=\"chal.srt\" Content-Type: text/plain <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"image\"; filename=\"img.png\" Content-Type: image/png <blob> --jhgd87g7Gy3d78-- Response HTTP/1.1 201 Created Content-Type: application/json Location: https://api.itslanguage.io/challenges/speech/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"topic\": \"What do you know about babies?\", \"language\": \"eng\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"srtUrl\": \"https://api.itslanguage.io/download/QEYduwrFRHeufiru\", \"imageUrl\": \"https://api.itslanguage.io/download/h-JJREJRCFAeA-nl\", \"metadata\": null } Update a speech challenge URL PUT /challenges/speech/:challenge HTTP/1.1 challenge - Required The speech challenge identifier. Update one or more properties of an existing speech challenge. Request parameters Name Type Description topic string Required A question or topic serving as guidance to the student. language string Required Language of the challenge in ISO 639-2 format. referenceAudio blob Optional The reference audio fragment. srt blob Optional The transcription of the challenge in .srt format. image blob Optional An image to show with the challenge. Request PUT /challenges/speech/4 HTTP/1.1 Accept: application/json Content-Type: application/json { \"topic\": \"What do you know about the baby?\" } Response HTTP/1.1 200 OK Content-Type: application/json Location: https://api.itslanguage.io/challenges/speech/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"topic\": \"What do you know about the baby?\", \"language\": \"eng\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/cxtczOCmVbvVsIFw\", \"srtUrl\": \"https://api.itslanguage.io/download/acfRSlgOorYdeYcP\", \"imageUrl\": \"https://api.itslanguage.io/download/xCbFikceYVgUIHqc\", \"metadata\": null }","title":"Speech"},{"location":"api/speech_challenges.html#speech-challenges","text":"Guide the student in speaking through an optional topic and optional reference audio.","title":"Speech Challenges"},{"location":"api/speech_challenges.html#list-all-speech-challenges","text":"","title":"List all speech challenges"},{"location":"api/speech_challenges.html#url","text":"GET /challenges/speech HTTP/1.1","title":"URL"},{"location":"api/speech_challenges.html#request","text":"GET /challenges/speech HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/speech_challenges.html#response","text":"The response is a JSON list with speech challenges. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"speech_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"topic\": \"What do you know about babies?\", \"language\": \"eng\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"srtUrl\": \"https://api.itslanguage.io/download/UKbsMpBsXaJUsBbK\", \"imageUrl\": \"https://api.itslanguage.io/download/GdExSbs-ZVNnQUUe\", \"metadata\": null }, { \"id\": \"12\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"language\": \"eng\", \"topic\": \"Book\", \"referenceAudioUrl\": null, \"srtUrl\": null, \"imageUrl\": null, \"metadata\": null } ]","title":"Response"},{"location":"api/speech_challenges.html#get-a-single-speech-challenge","text":"","title":"Get a single speech challenge"},{"location":"api/speech_challenges.html#url_1","text":"GET /challenges/speech/:challenge HTTP/1.1 challenge - Required The speech challenge identifier.","title":"URL"},{"location":"api/speech_challenges.html#request_1","text":"GET /challenges/speech/speech_1 HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/speech_challenges.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"speech_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"topic\": \"What do you know about babies?\", \"language\": \"eng\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"srtUrl\": \"https://api.itslanguage.io/download/zVXLJJuGyhBHQbfX\", \"imageUrl\": \"https://api.itslanguage.io/download/dlnBo-dotLpnhN-a\", \"metadata\": null }","title":"Response"},{"location":"api/speech_challenges.html#create-a-speech-challenge","text":"","title":"Create a speech challenge"},{"location":"api/speech_challenges.html#url_2","text":"POST /challenges/speech HTTP/1.1","title":"URL"},{"location":"api/speech_challenges.html#request-parameters","text":"Name Type Description id string Optional The speech challenge identifier. If none is given, one is generated. topic string Optional A question or topic serving as guidance to the student. language string Required Language of the challenge in ISO 639-2 format. referenceAudio blob Optional The reference audio fragment. srt blob Optional The transcription of the challenge in .srt format. image blob Optional An image to show with the challenge. metadata string Optional Client specific properties that are not validated nor filtered.","title":"Request parameters"},{"location":"api/speech_challenges.html#request_2","text":"POST /challenges/speech HTTP/1.1 Accept: application/json Content-Type: multipart/form-data; boundary=jhgd87g7Gy3d78 --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"referenceAudio\"; filename=\"blob\" Content-Type: audio/ogg <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"topic\" What do you know about babies? --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"language\" eng --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"srt\"; filename=\"chal.srt\" Content-Type: text/plain <blob> --jhgd87g7Gy3d78 Content-Disposition: form-data; name=\"image\"; filename=\"img.png\" Content-Type: image/png <blob> --jhgd87g7Gy3d78--","title":"Request"},{"location":"api/speech_challenges.html#response_2","text":"HTTP/1.1 201 Created Content-Type: application/json Location: https://api.itslanguage.io/challenges/speech/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"topic\": \"What do you know about babies?\", \"language\": \"eng\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/YsjdG37bUGseu8-bsJ\", \"srtUrl\": \"https://api.itslanguage.io/download/QEYduwrFRHeufiru\", \"imageUrl\": \"https://api.itslanguage.io/download/h-JJREJRCFAeA-nl\", \"metadata\": null }","title":"Response"},{"location":"api/speech_challenges.html#update-a-speech-challenge","text":"","title":"Update a speech challenge"},{"location":"api/speech_challenges.html#url_3","text":"PUT /challenges/speech/:challenge HTTP/1.1 challenge - Required The speech challenge identifier. Update one or more properties of an existing speech challenge.","title":"URL"},{"location":"api/speech_challenges.html#request-parameters_1","text":"Name Type Description topic string Required A question or topic serving as guidance to the student. language string Required Language of the challenge in ISO 639-2 format. referenceAudio blob Optional The reference audio fragment. srt blob Optional The transcription of the challenge in .srt format. image blob Optional An image to show with the challenge.","title":"Request parameters"},{"location":"api/speech_challenges.html#request_3","text":"PUT /challenges/speech/4 HTTP/1.1 Accept: application/json Content-Type: application/json { \"topic\": \"What do you know about the baby?\" }","title":"Request"},{"location":"api/speech_challenges.html#response_3","text":"HTTP/1.1 200 OK Content-Type: application/json Location: https://api.itslanguage.io/challenges/speech/4 { \"id\": \"4\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"topic\": \"What do you know about the baby?\", \"language\": \"eng\", \"referenceAudioUrl\": \"https://api.itslanguage.io/download/cxtczOCmVbvVsIFw\", \"srtUrl\": \"https://api.itslanguage.io/download/acfRSlgOorYdeYcP\", \"imageUrl\": \"https://api.itslanguage.io/download/xCbFikceYVgUIHqc\", \"metadata\": null }","title":"Response"},{"location":"api/ssl.html","text":"Securing Your Connection ITSLanguage's API is available solely over HTTPS. This makes sure data is being transported over an encrypted line. There is really no valid reason to use unencrypted connections.","title":"SSL"},{"location":"api/ssl.html#securing-your-connection","text":"ITSLanguage's API is available solely over HTTPS. This makes sure data is being transported over an encrypted line. There is really no valid reason to use unencrypted connections.","title":"Securing Your Connection"},{"location":"api/tenants.html","text":"Tenants Tenants can be managed using the REST API. Only users with administrative powers can perform these calls. List all tenants URL GET /tenants HTTP/1.1 Response The response contains a list of tenants. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"jefuyguiwde8\", \"name\": \"Some Tenant\", \"created\": \"2016-12-10T19:37:40Z\", \"updated\": \"2016-12-13T14:26:15Z\" }, { \"id\": \"3greg56gda\", \"name\": \"Other Tenant\", \"created\": \"2016-09-19T11:19:52Z\", \"updated\": \"2016-11-12T16:20:17Z\" } ] Get a single tenant URL GET /tenants/:tenant HTTP/1.1 tenant - Required The identifier of the tenant. Request GET /tenants/3greg56gda HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"3greg56gda\", \"name\": \"Other Tenant\", \"created\": \"2016-09-19T11:19:52Z\", \"updated\": \"2016-11-12T16:20:17Z\" } Create a tenant URL POST /tenants HTTP/1.1 Input Name Type Description id string Optional A unique identifier. If none is given, one is generated. name string Required The name of the tenant. Request POST /tenants HTTP/1.1 Accept: application/json Content-Type: application/json { \"id\": \"newtenant\", \"name\": \"Yet another tenant\" } Response HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"newtenant\", \"name\": \"Yet another tenant\", \"created\": \"2017-01-01T01:00:32Z\", \"updated\": \"2017-01-01T01:00:32Z\" }","title":"Tenants"},{"location":"api/tenants.html#tenants","text":"Tenants can be managed using the REST API. Only users with administrative powers can perform these calls.","title":"Tenants"},{"location":"api/tenants.html#list-all-tenants","text":"","title":"List all tenants"},{"location":"api/tenants.html#url","text":"GET /tenants HTTP/1.1","title":"URL"},{"location":"api/tenants.html#response","text":"The response contains a list of tenants. HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"jefuyguiwde8\", \"name\": \"Some Tenant\", \"created\": \"2016-12-10T19:37:40Z\", \"updated\": \"2016-12-13T14:26:15Z\" }, { \"id\": \"3greg56gda\", \"name\": \"Other Tenant\", \"created\": \"2016-09-19T11:19:52Z\", \"updated\": \"2016-11-12T16:20:17Z\" } ]","title":"Response"},{"location":"api/tenants.html#get-a-single-tenant","text":"","title":"Get a single tenant"},{"location":"api/tenants.html#url_1","text":"GET /tenants/:tenant HTTP/1.1 tenant - Required The identifier of the tenant.","title":"URL"},{"location":"api/tenants.html#request","text":"GET /tenants/3greg56gda HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/tenants.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json { \"id\": \"3greg56gda\", \"name\": \"Other Tenant\", \"created\": \"2016-09-19T11:19:52Z\", \"updated\": \"2016-11-12T16:20:17Z\" }","title":"Response"},{"location":"api/tenants.html#create-a-tenant","text":"","title":"Create a tenant"},{"location":"api/tenants.html#url_2","text":"POST /tenants HTTP/1.1","title":"URL"},{"location":"api/tenants.html#input","text":"Name Type Description id string Optional A unique identifier. If none is given, one is generated. name string Required The name of the tenant.","title":"Input"},{"location":"api/tenants.html#request_1","text":"POST /tenants HTTP/1.1 Accept: application/json Content-Type: application/json { \"id\": \"newtenant\", \"name\": \"Yet another tenant\" }","title":"Request"},{"location":"api/tenants.html#response_2","text":"HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"newtenant\", \"name\": \"Yet another tenant\", \"created\": \"2017-01-01T01:00:32Z\", \"updated\": \"2017-01-01T01:00:32Z\" }","title":"Response"},{"location":"api/urls.html","text":"URLs API actions are usually performed by accessing our production servers on the api.itslanguage.io domain. For example: curl -i https://api.itslanguage.io/organisations HTTP/1.1 200 OK Cache-Control: no-cache Content-Type: application/json; charset=utf-8 Vary: Accept-Encoding Date: Wed, 20 Nov 2013 17:10:22 GMT Server: Google Frontend Alternate-Protocol: 443:quic Transfer-Encoding: chunked []","title":"URLs"},{"location":"api/urls.html#urls","text":"API actions are usually performed by accessing our production servers on the api.itslanguage.io domain. For example: curl -i https://api.itslanguage.io/organisations HTTP/1.1 200 OK Cache-Control: no-cache Content-Type: application/json; charset=utf-8 Vary: Accept-Encoding Date: Wed, 20 Nov 2013 17:10:22 GMT Server: Google Frontend Alternate-Protocol: 443:quic Transfer-Encoding: chunked []","title":"URLs"},{"location":"api/users.html","text":"Users Users can be managed using the REST API. Only users with administrative powers can perform these calls. Create a user When creating a user, the user is created at the same level as the current user. This means that when a top level admin creates a user, a top level user is created. When the current user resides in an organisation the created user will be created in that organisation. When creating a user in a different organisation, the current user needs to impersonate the target organisation. URL POST /users HTTP/1.1 Input Name Type Description id string Optional A unique identifier. If none is given, one is generated. firstName string Required The first name of the user. infix string Required The infix of the user. lastName string Required The last name of the user. groups string[] Optional Groups the user resides in. roles string[] Required The names of roles to grant the user. Request POST /users HTTP/1.1 Accept: application/json Content-Type: application/json { \"firstName\": \"Najat\", \"infix\": \"van der\", \"lastName\": \"Lee\", \"groups\": [\"group_1\"], \"roles\": [\"ADMIN\"] } Response HTTP/1.1 201 Created Content-Type: application/json { \"groups\": [\"group_1\"], \"infix\": \"van der\", \"id\": \"sdcjb823jhguys5j\", \"firstName\": \"Najat\", \"updated\": \"2016-12-22T02:14:05Z\", \"created\": \"2016-12-22T02:14:05Z\", \"roles\": [\"ADMIN\"], \"lastName\": \"Lee\" } List users URL GET /users HTTP/1.1 Request GET /users HTTP/1.1 Accept: application/json Response HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"sdcjb823jhguys5j\", \"groups\": [\"first_grade\"], \"firstName\": \"Najat\", \"infix\": \"van der\", \"lastName\": \"Lee\", \"roles\": ['STUDENT'] \"created\": \"2016-12-22T02:14:05Z\", \"updated\": \"2016-12-22T02:14:05Z\" }, { \"id\": \"iosdhrfd893ufg\", \"groups\": [\"first_grade\", \"second_grade\"], \"firstName\": \"Chrissy\", \"infix\": null, \"lastName\": \"Haagen\", \"roles\": [\"TEACHER\"], \"created\": \"2017-01-01T14:05:05Z\", \"updated\": \"2017-01-01T14:05:05Z\" } ] Filters The following filters may be applied: Name Description group The id of the group that a user should be in. role The id of the role that a user should be in. Get current user URL GET /user HTTP/1.1 Request GET /user HTTP/1.1 Accept: application/json Response HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"bgfg83bjdg62j\", \"groups\": [\"group_6\"], \"firstName\": \"Juriaan\", \"infix\": null, \"lastName\": \"Winkens\", \"roles\": [\"STUDENT\"], \"created\": \"2017-01-03T12:16:55Z\", \"updated\": \"2017-01-03T12:16:55Z\" }","title":"Users"},{"location":"api/users.html#users","text":"Users can be managed using the REST API. Only users with administrative powers can perform these calls.","title":"Users"},{"location":"api/users.html#create-a-user","text":"When creating a user, the user is created at the same level as the current user. This means that when a top level admin creates a user, a top level user is created. When the current user resides in an organisation the created user will be created in that organisation. When creating a user in a different organisation, the current user needs to impersonate the target organisation.","title":"Create a user"},{"location":"api/users.html#url","text":"POST /users HTTP/1.1","title":"URL"},{"location":"api/users.html#input","text":"Name Type Description id string Optional A unique identifier. If none is given, one is generated. firstName string Required The first name of the user. infix string Required The infix of the user. lastName string Required The last name of the user. groups string[] Optional Groups the user resides in. roles string[] Required The names of roles to grant the user.","title":"Input"},{"location":"api/users.html#request","text":"POST /users HTTP/1.1 Accept: application/json Content-Type: application/json { \"firstName\": \"Najat\", \"infix\": \"van der\", \"lastName\": \"Lee\", \"groups\": [\"group_1\"], \"roles\": [\"ADMIN\"] }","title":"Request"},{"location":"api/users.html#response","text":"HTTP/1.1 201 Created Content-Type: application/json { \"groups\": [\"group_1\"], \"infix\": \"van der\", \"id\": \"sdcjb823jhguys5j\", \"firstName\": \"Najat\", \"updated\": \"2016-12-22T02:14:05Z\", \"created\": \"2016-12-22T02:14:05Z\", \"roles\": [\"ADMIN\"], \"lastName\": \"Lee\" }","title":"Response"},{"location":"api/users.html#list-users","text":"","title":"List users"},{"location":"api/users.html#url_1","text":"GET /users HTTP/1.1","title":"URL"},{"location":"api/users.html#request_1","text":"GET /users HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/users.html#response_1","text":"HTTP/1.1 200 OK Content-Type: application/json [ { \"id\": \"sdcjb823jhguys5j\", \"groups\": [\"first_grade\"], \"firstName\": \"Najat\", \"infix\": \"van der\", \"lastName\": \"Lee\", \"roles\": ['STUDENT'] \"created\": \"2016-12-22T02:14:05Z\", \"updated\": \"2016-12-22T02:14:05Z\" }, { \"id\": \"iosdhrfd893ufg\", \"groups\": [\"first_grade\", \"second_grade\"], \"firstName\": \"Chrissy\", \"infix\": null, \"lastName\": \"Haagen\", \"roles\": [\"TEACHER\"], \"created\": \"2017-01-01T14:05:05Z\", \"updated\": \"2017-01-01T14:05:05Z\" } ]","title":"Response"},{"location":"api/users.html#filters","text":"The following filters may be applied: Name Description group The id of the group that a user should be in. role The id of the role that a user should be in.","title":"Filters"},{"location":"api/users.html#get-current-user","text":"","title":"Get current user"},{"location":"api/users.html#url_2","text":"GET /user HTTP/1.1","title":"URL"},{"location":"api/users.html#request_2","text":"GET /user HTTP/1.1 Accept: application/json","title":"Request"},{"location":"api/users.html#response_2","text":"HTTP/1.1 201 Created Content-Type: application/json { \"id\": \"bgfg83bjdg62j\", \"groups\": [\"group_6\"], \"firstName\": \"Juriaan\", \"infix\": null, \"lastName\": \"Winkens\", \"roles\": [\"STUDENT\"], \"created\": \"2017-01-03T12:16:55Z\", \"updated\": \"2017-01-03T12:16:55Z\" }","title":"Response"},{"location":"websocket/audio.html","text":"Audio Various RPCs accept audio uploads. Supported audio formats are documented here. WAV Mimetypes The WAV format has multiple mimetypes associated with it. The following are supported by ITSLanguage: audio/wav audio/wave audio/x-wav Parameters name type description channels int Required The number of channels. frame_rate int Required The frame rate in Hertz. sample_width int Required The sample width in bits. Self-describing formats A self-describing audio format has a file header with all required information. The SoX documentation elaborates on this in more technical details. Basically, any self-describing audio format should work, however only WAVE is supported.","title":"Audio"},{"location":"websocket/audio.html#audio","text":"Various RPCs accept audio uploads. Supported audio formats are documented here.","title":"Audio"},{"location":"websocket/audio.html#wav","text":"","title":"WAV"},{"location":"websocket/audio.html#mimetypes","text":"The WAV format has multiple mimetypes associated with it. The following are supported by ITSLanguage: audio/wav audio/wave audio/x-wav","title":"Mimetypes"},{"location":"websocket/audio.html#parameters","text":"name type description channels int Required The number of channels. frame_rate int Required The frame rate in Hertz. sample_width int Required The sample width in bits.","title":"Parameters"},{"location":"websocket/audio.html#self-describing-formats","text":"A self-describing audio format has a file header with all required information. The SoX documentation elaborates on this in more technical details. Basically, any self-describing audio format should work, however only WAVE is supported.","title":"Self-describing formats"},{"location":"websocket/choice_recognitions.html","text":"Choice Recognitions Performing a choice recognition is broken up into various calls. To perform a choice recognition a number of steps have to be made: Initialising a choice recognition Initialise choice challenge Register audio procedure Perform the recognition Initialising a choice recognition This is the starting point for a choice recognition. A unique recognition id is generated, which serves a leading role in the recognition. Each other call requires the recognition id as a parameter. If other RPCs are called without this RPC being called first, the error nl.itslanguage.session_not_initialised will be returned. URI nl.itslanguage.choice.init_recognition Response The unique recognition id is returned as a string. The id is used in other calls to identify the current recognition. Initialise choice challenge Before performing the recognition, a WFST needs to be prepared for the challenge. When the RPC is called, the challenge is initialised asynchronously. When the challenge is to be used, the server automatically waits for the challenge initialisation to finish. If the initialisation results in an error, the error is relayed to the client. URI nl.itslanguage.choice.init_challenge Parameters Name Type Description recognition_id string Required The id of the recognition to prepare the challenge for. organisation_id string Required The id of the organisation in which to find the challenge. challenge_id string Required The id of the challenge to prepare. Perform the recognition The recognition can be performed when all preparations are done. URI nl.itslanguage.choice.recognise Parameters Name Type Description recognition_id string Required The id of the recognition to perform. rpc string Required The URI of a registered audio rpc . Response A JSON object with the recognition results and metadata is returned. Example: {\"id\": \"g93h844\", \"audioUrl\": \"https://api-dot-itslanguage.nl:80/organisations/1/challenges/choice/4/recognitions/g93h844/audio\", \"recognised\": \"Unicorns\"} The RPC can return various errors: nl.itslanguage.recognition_failed If the recognition of the audio failed. nl.itslanguage.no_such_organisation If the organisation doesn't exist. nl.itslanguage.no_such_challenge If the challenge doesn't exist.","title":"Choice Recognitions"},{"location":"websocket/choice_recognitions.html#choice-recognitions","text":"Performing a choice recognition is broken up into various calls. To perform a choice recognition a number of steps have to be made: Initialising a choice recognition Initialise choice challenge Register audio procedure Perform the recognition","title":"Choice Recognitions"},{"location":"websocket/choice_recognitions.html#initialising-a-choice-recognition","text":"This is the starting point for a choice recognition. A unique recognition id is generated, which serves a leading role in the recognition. Each other call requires the recognition id as a parameter. If other RPCs are called without this RPC being called first, the error nl.itslanguage.session_not_initialised will be returned.","title":"Initialising a choice recognition"},{"location":"websocket/choice_recognitions.html#uri","text":"nl.itslanguage.choice.init_recognition","title":"URI"},{"location":"websocket/choice_recognitions.html#response","text":"The unique recognition id is returned as a string. The id is used in other calls to identify the current recognition.","title":"Response"},{"location":"websocket/choice_recognitions.html#initialise-choice-challenge","text":"Before performing the recognition, a WFST needs to be prepared for the challenge. When the RPC is called, the challenge is initialised asynchronously. When the challenge is to be used, the server automatically waits for the challenge initialisation to finish. If the initialisation results in an error, the error is relayed to the client.","title":"Initialise choice challenge"},{"location":"websocket/choice_recognitions.html#uri_1","text":"nl.itslanguage.choice.init_challenge","title":"URI"},{"location":"websocket/choice_recognitions.html#parameters","text":"Name Type Description recognition_id string Required The id of the recognition to prepare the challenge for. organisation_id string Required The id of the organisation in which to find the challenge. challenge_id string Required The id of the challenge to prepare.","title":"Parameters"},{"location":"websocket/choice_recognitions.html#perform-the-recognition","text":"The recognition can be performed when all preparations are done.","title":"Perform the recognition"},{"location":"websocket/choice_recognitions.html#uri_2","text":"nl.itslanguage.choice.recognise","title":"URI"},{"location":"websocket/choice_recognitions.html#parameters_1","text":"Name Type Description recognition_id string Required The id of the recognition to perform. rpc string Required The URI of a registered audio rpc .","title":"Parameters"},{"location":"websocket/choice_recognitions.html#response_1","text":"A JSON object with the recognition results and metadata is returned. Example: {\"id\": \"g93h844\", \"audioUrl\": \"https://api-dot-itslanguage.nl:80/organisations/1/challenges/choice/4/recognitions/g93h844/audio\", \"recognised\": \"Unicorns\"} The RPC can return various errors: nl.itslanguage.recognition_failed If the recognition of the audio failed. nl.itslanguage.no_such_organisation If the organisation doesn't exist. nl.itslanguage.no_such_challenge If the challenge doesn't exist.","title":"Response"},{"location":"websocket/feedback.html","text":"Speech feedback It's possible to get feedback while recording. After every sentence feedback is provided indicating whether or not the sentence was read well. To perform a recording with feedback the following calls have to be made: Meet prerequisites Prepare the speech feedback Register audio procedure for streaming Start listening for audio Prerequisites To be able to do speech feedback the following prerequisites needs to be met: A speech challenge must be used so that needs to exist. The speech challenges needs to have the language set The user performing the speech feedback needs to have a valid profile with birthYear and language set. Prepare Prepare a new speech feedback. This RPC should be called for each new speech feedback. A unique id is generated for a speech feedback and a speech challenge is prepared. URI nl.itslanguage.feedback.prepare Parameters Name Type Description challenge_id string Required The id of the speech challenge to prepare. Response The id of the new speech recording is returned as a string. Start listening In order to receive feedback the server needs to listen for audio on the registered audio rpc. While listening the server will reply using progressive results. The server will stop listening when the audio rpc returns. Note The server will only stop processing the audio when the audio rpc returns. URI nl.itslanguage.feedback.listen_and_reply Parameters Name Type Description recording_id string Required The unique id of the speech recording. rpc string Required The URI of a registered audio rpc . Response The rpc returns progressive results for realtime feadback. After every sentence the following json is sent as a progressive result: { \"feedback_id\": \"recording_1\", \"sentence\": 0, \"errors\": 0, \"words\": [ { \"expected\": \"funny\", \"recognized\": \"funny\", \"error\": null, \"correct\": true }, { \"expected\": \"gif\", \"recognized\": \"jif\", \"error\": \"substitution\", \"correct\": false } ] } Name Type Description feedback_id string The unique id of the feedback this results belongs to. sentence int The index of the sentence, starting at 0 . errors int Amount of errors made. words list All expected and recognized words in the sentence. The list of words each contain the following fields: Name Type Description correct bool Whether the word was pronounced correctly. error string The kind of error that was detected. expected string The word as it was expected to be pronounced. recognized string The recognized result. If nothing is recognized this field is null . When an error is detected it is included as a string. Possible values are: Value Description deletion Nothing was recognized. substitution Something got recognized but not what was expected. repetition The word was recognized correctly but multiple times. When the recording is finished a recording with feedback is returned: { \"id\": \"recording_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"audioUrl\": \"https://api.itslanguage.nl/download/audio.wav\", \"sentences\": [ { \"sentence\": 0, \"errors\": 1, \"words\": [ { \"expected\": \"hello\", \"recognized\": \"hello\", \"error\": null, \"correct\": true }, { \"expected\": \"there\", \"recognized\": \"their\", \"error\": \"substitution\", \"correct\": false } ] }, { \"sentence\": 1, \"errors\": 0, \"words\": [ { \"expected\": \"general\", \"recognized\": \"general\", \"error\": null, \"correct\": true }, { \"expected\": \"kenobi\", \"recognized\": \"kenobi\", \"error\": null, \"correct\": true } ] } ] } Name Type Description id string The id of the recording. created string The timestamp when the recording was created. updated string The timestamp when the recording was last updated. audioUrl string The url to fetch the recorded audio. sentences array A list containing the feedback per sentence. Pause When desired the feedback recording can be paused. Doing so will stop the server from processing the audio stream and returning feedback. Do note that the audio recording isn't paused when the feedback is paused . To pause the recording the audio RPC needs to stop sending data. For practical reasons it is recommended to stop sending audio when the feedback is paused. Also see the Resume docs for more info. Note Pausing the feedback will not stop the feedback. See the note on audio processing how to stop it. URI nl.itslanguage.feedback.pause Parameters Name Type Description id string Required The id of the feedback to pause. Resume A paused feedback can be resumed using this RPC. After this the audio stream is again processed by the server. Currently it is required to re-send the audio header when resuming feedback . Failing to do so will fail the feedback as the server can't recognise the audio format without a header. Note It appears to be valid to have a wave file with multiple headers. URI nl.itslanguage.feedback.resume Parameters Name Type Description id string Required The id of the feedback to resume. sentence_id int Required The id of the sentence (starting with 0 ) to resume on.","title":"Speech Feedback"},{"location":"websocket/feedback.html#speech-feedback","text":"It's possible to get feedback while recording. After every sentence feedback is provided indicating whether or not the sentence was read well. To perform a recording with feedback the following calls have to be made: Meet prerequisites Prepare the speech feedback Register audio procedure for streaming Start listening for audio","title":"Speech feedback"},{"location":"websocket/feedback.html#prerequisites","text":"To be able to do speech feedback the following prerequisites needs to be met: A speech challenge must be used so that needs to exist. The speech challenges needs to have the language set The user performing the speech feedback needs to have a valid profile with birthYear and language set.","title":"Prerequisites"},{"location":"websocket/feedback.html#prepare","text":"Prepare a new speech feedback. This RPC should be called for each new speech feedback. A unique id is generated for a speech feedback and a speech challenge is prepared.","title":"Prepare"},{"location":"websocket/feedback.html#uri","text":"nl.itslanguage.feedback.prepare","title":"URI"},{"location":"websocket/feedback.html#parameters","text":"Name Type Description challenge_id string Required The id of the speech challenge to prepare.","title":"Parameters"},{"location":"websocket/feedback.html#response","text":"The id of the new speech recording is returned as a string.","title":"Response"},{"location":"websocket/feedback.html#start-listening","text":"In order to receive feedback the server needs to listen for audio on the registered audio rpc. While listening the server will reply using progressive results. The server will stop listening when the audio rpc returns. Note The server will only stop processing the audio when the audio rpc returns.","title":"Start listening"},{"location":"websocket/feedback.html#uri_1","text":"nl.itslanguage.feedback.listen_and_reply","title":"URI"},{"location":"websocket/feedback.html#parameters_1","text":"Name Type Description recording_id string Required The unique id of the speech recording. rpc string Required The URI of a registered audio rpc .","title":"Parameters"},{"location":"websocket/feedback.html#response_1","text":"The rpc returns progressive results for realtime feadback. After every sentence the following json is sent as a progressive result: { \"feedback_id\": \"recording_1\", \"sentence\": 0, \"errors\": 0, \"words\": [ { \"expected\": \"funny\", \"recognized\": \"funny\", \"error\": null, \"correct\": true }, { \"expected\": \"gif\", \"recognized\": \"jif\", \"error\": \"substitution\", \"correct\": false } ] } Name Type Description feedback_id string The unique id of the feedback this results belongs to. sentence int The index of the sentence, starting at 0 . errors int Amount of errors made. words list All expected and recognized words in the sentence. The list of words each contain the following fields: Name Type Description correct bool Whether the word was pronounced correctly. error string The kind of error that was detected. expected string The word as it was expected to be pronounced. recognized string The recognized result. If nothing is recognized this field is null . When an error is detected it is included as a string. Possible values are: Value Description deletion Nothing was recognized. substitution Something got recognized but not what was expected. repetition The word was recognized correctly but multiple times. When the recording is finished a recording with feedback is returned: { \"id\": \"recording_1\", \"created\": \"2014-01-28T21:25:10Z\", \"updated\": \"2014-01-28T21:25:10Z\", \"audioUrl\": \"https://api.itslanguage.nl/download/audio.wav\", \"sentences\": [ { \"sentence\": 0, \"errors\": 1, \"words\": [ { \"expected\": \"hello\", \"recognized\": \"hello\", \"error\": null, \"correct\": true }, { \"expected\": \"there\", \"recognized\": \"their\", \"error\": \"substitution\", \"correct\": false } ] }, { \"sentence\": 1, \"errors\": 0, \"words\": [ { \"expected\": \"general\", \"recognized\": \"general\", \"error\": null, \"correct\": true }, { \"expected\": \"kenobi\", \"recognized\": \"kenobi\", \"error\": null, \"correct\": true } ] } ] } Name Type Description id string The id of the recording. created string The timestamp when the recording was created. updated string The timestamp when the recording was last updated. audioUrl string The url to fetch the recorded audio. sentences array A list containing the feedback per sentence.","title":"Response"},{"location":"websocket/feedback.html#pause","text":"When desired the feedback recording can be paused. Doing so will stop the server from processing the audio stream and returning feedback. Do note that the audio recording isn't paused when the feedback is paused . To pause the recording the audio RPC needs to stop sending data. For practical reasons it is recommended to stop sending audio when the feedback is paused. Also see the Resume docs for more info. Note Pausing the feedback will not stop the feedback. See the note on audio processing how to stop it.","title":"Pause"},{"location":"websocket/feedback.html#uri_2","text":"nl.itslanguage.feedback.pause","title":"URI"},{"location":"websocket/feedback.html#parameters_2","text":"Name Type Description id string Required The id of the feedback to pause.","title":"Parameters"},{"location":"websocket/feedback.html#resume","text":"A paused feedback can be resumed using this RPC. After this the audio stream is again processed by the server. Currently it is required to re-send the audio header when resuming feedback . Failing to do so will fail the feedback as the server can't recognise the audio format without a header. Note It appears to be valid to have a wave file with multiple headers.","title":"Resume"},{"location":"websocket/feedback.html#uri_3","text":"nl.itslanguage.feedback.resume","title":"URI"},{"location":"websocket/feedback.html#parameters_3","text":"Name Type Description id string Required The id of the feedback to resume. sentence_id int Required The id of the sentence (starting with 0 ) to resume on.","title":"Parameters"},{"location":"websocket/pronunciation_analyses.html","text":"Pronunciation Analyses Performing a pronunciation analysis is broken up into various calls. Initialising a pronunciation analysis This is the starting point for a pronunciation analysis. A unique analysis id is generated, which serves a leading role in the analysis. Each other call requires the analysis id as a parameter. If other RPCs are called without this RPC being called first, the error nl.itslanguage.session_not_initialised will be returned. URI nl.itslanguage.pronunciation.init_analysis Response The unique analysis id is returned as a string. The id is used in other calls to identify the current analysis. Initialise pronunciation challenge Before performing the analysis, the reference audio of the challenge needs to be prepared. This involves aligning the audio. When the RPC is called, the challenge is initialised asynchronously. When the challenge is to be used, the server automatically waits for the challenge initialisation to finish. If the initialisation results in an error, the error is relayed to the client. URI nl.itslanguage.pronunciation.init_challenge Fetch reference alignment The challenge that will be done is registered with a reference audio file to compare the student's speech with. This will need to be fetched before being able to send audio. This reference alignment will be given back to the caller as an intermediate result. URI nl.itslanguage.pronunciation.alignment Initialising audio for uploading The audio that is to be uploaded for analysis is streamed to the server. Some information is required in order for the server to be able to store and analyse the audio correctly. URI nl.itslanguage.pronunciation.init_audio Parameters Name Type Description analysis_id string Required The id of the analysis to initialise the audio for. audio_format string Required The mimetype of the audio to upload. Depending on the audio_format , additional parameters may be required. Please see the audio documentation for which audio formats are supported and what parameters they require. Parameters Name Type Description analysis_id string Required The id of the analysis to prepare the challenge for. organisation_id string Required The id of the organisation in which to find the challenge. challenge_id string Required The id of the challenge to prepare. Stream analysis audio The audio to be analysed can now be streamed to the server. The streaming works by repeatedly calling this RPC. Each time the RPC is called, the data will be appended to an audio file on the server. URI nl.itslanguage.pronunciation.write Parameters Name Type Description analysis_id string Required The id of the analysis for which to upload the audio. data bytes Required The data to stream to the server. This can be any length. encoding string Optional The encoding in which the data is sent. This should be base64 if the data is base64 encoded. Perform the analysis After completing the streaming of the audio, the analysis can be performed. URI nl.itslanguage.pronunciation.analyse Parameters Name Type Description analysis_id string Required The id of the analysis to perform. Response A JSON object with the analysis results and metadata is returned. Example: {\"id\": \"98\", \"audioUrl\": \"https://api-dot-itslanguage.nl:80/organisations/1/challenges/pronunciation/4/analyses/98/audio\", \"score\": 8.4245, \"words\": [[{\"graphemes\": \"B\", \"score\": 9.8355, \"verdict\": \"good\", \"phonemes\": [{\"start\": 0.12, \"end\": 0.33, \"ipa\": \"b\", \"score\": 9.8355, \"verdict\": \"good\"}]}, {\"graphemes\": \"IR\", \"phonemes\": [{\"end\": 0.5, \"ipa\": \"er\", \"score\": 5.9905, \"start\": 0.33, \"verdict\": \"moderate\"}], \"score\": 5.9905, \"verdict\": \"moderate\"}, {\"graphemes\": \"D\", \"phonemes\": [{\"end\": 0.63, \"ipa\": \"d\", \"score\": 7.5173, \"start\": 0.5, \"verdict\": \"good\"}], \"score\": 7.5173, \"verdict\": \"good\"}]]} The RPC can return various errors: nl.itslanguage.alignment_failed If the alignment of the audio failed. nl.itslanguage.analysis_failed If the analysis of the audio failed. nl.itslanguage.no_such_organisation If the organisation doesn't exist. nl.itslanguage.no_such_challenge If the challenge doesn't exist.","title":"Pronunciation Analyses"},{"location":"websocket/pronunciation_analyses.html#pronunciation-analyses","text":"Performing a pronunciation analysis is broken up into various calls.","title":"Pronunciation Analyses"},{"location":"websocket/pronunciation_analyses.html#initialising-a-pronunciation-analysis","text":"This is the starting point for a pronunciation analysis. A unique analysis id is generated, which serves a leading role in the analysis. Each other call requires the analysis id as a parameter. If other RPCs are called without this RPC being called first, the error nl.itslanguage.session_not_initialised will be returned.","title":"Initialising a pronunciation analysis"},{"location":"websocket/pronunciation_analyses.html#uri","text":"nl.itslanguage.pronunciation.init_analysis","title":"URI"},{"location":"websocket/pronunciation_analyses.html#response","text":"The unique analysis id is returned as a string. The id is used in other calls to identify the current analysis.","title":"Response"},{"location":"websocket/pronunciation_analyses.html#initialise-pronunciation-challenge","text":"Before performing the analysis, the reference audio of the challenge needs to be prepared. This involves aligning the audio. When the RPC is called, the challenge is initialised asynchronously. When the challenge is to be used, the server automatically waits for the challenge initialisation to finish. If the initialisation results in an error, the error is relayed to the client.","title":"Initialise pronunciation challenge"},{"location":"websocket/pronunciation_analyses.html#uri_1","text":"nl.itslanguage.pronunciation.init_challenge","title":"URI"},{"location":"websocket/pronunciation_analyses.html#fetch-reference-alignment","text":"The challenge that will be done is registered with a reference audio file to compare the student's speech with. This will need to be fetched before being able to send audio. This reference alignment will be given back to the caller as an intermediate result.","title":"Fetch reference alignment"},{"location":"websocket/pronunciation_analyses.html#uri_2","text":"nl.itslanguage.pronunciation.alignment","title":"URI"},{"location":"websocket/pronunciation_analyses.html#initialising-audio-for-uploading","text":"The audio that is to be uploaded for analysis is streamed to the server. Some information is required in order for the server to be able to store and analyse the audio correctly.","title":"Initialising audio for uploading"},{"location":"websocket/pronunciation_analyses.html#uri_3","text":"nl.itslanguage.pronunciation.init_audio","title":"URI"},{"location":"websocket/pronunciation_analyses.html#parameters","text":"Name Type Description analysis_id string Required The id of the analysis to initialise the audio for. audio_format string Required The mimetype of the audio to upload. Depending on the audio_format , additional parameters may be required. Please see the audio documentation for which audio formats are supported and what parameters they require.","title":"Parameters"},{"location":"websocket/pronunciation_analyses.html#parameters_1","text":"Name Type Description analysis_id string Required The id of the analysis to prepare the challenge for. organisation_id string Required The id of the organisation in which to find the challenge. challenge_id string Required The id of the challenge to prepare.","title":"Parameters"},{"location":"websocket/pronunciation_analyses.html#stream-analysis-audio","text":"The audio to be analysed can now be streamed to the server. The streaming works by repeatedly calling this RPC. Each time the RPC is called, the data will be appended to an audio file on the server.","title":"Stream analysis audio"},{"location":"websocket/pronunciation_analyses.html#uri_4","text":"nl.itslanguage.pronunciation.write","title":"URI"},{"location":"websocket/pronunciation_analyses.html#parameters_2","text":"Name Type Description analysis_id string Required The id of the analysis for which to upload the audio. data bytes Required The data to stream to the server. This can be any length. encoding string Optional The encoding in which the data is sent. This should be base64 if the data is base64 encoded.","title":"Parameters"},{"location":"websocket/pronunciation_analyses.html#perform-the-analysis","text":"After completing the streaming of the audio, the analysis can be performed.","title":"Perform the analysis"},{"location":"websocket/pronunciation_analyses.html#uri_5","text":"nl.itslanguage.pronunciation.analyse","title":"URI"},{"location":"websocket/pronunciation_analyses.html#parameters_3","text":"Name Type Description analysis_id string Required The id of the analysis to perform.","title":"Parameters"},{"location":"websocket/pronunciation_analyses.html#response_1","text":"A JSON object with the analysis results and metadata is returned. Example: {\"id\": \"98\", \"audioUrl\": \"https://api-dot-itslanguage.nl:80/organisations/1/challenges/pronunciation/4/analyses/98/audio\", \"score\": 8.4245, \"words\": [[{\"graphemes\": \"B\", \"score\": 9.8355, \"verdict\": \"good\", \"phonemes\": [{\"start\": 0.12, \"end\": 0.33, \"ipa\": \"b\", \"score\": 9.8355, \"verdict\": \"good\"}]}, {\"graphemes\": \"IR\", \"phonemes\": [{\"end\": 0.5, \"ipa\": \"er\", \"score\": 5.9905, \"start\": 0.33, \"verdict\": \"moderate\"}], \"score\": 5.9905, \"verdict\": \"moderate\"}, {\"graphemes\": \"D\", \"phonemes\": [{\"end\": 0.63, \"ipa\": \"d\", \"score\": 7.5173, \"start\": 0.5, \"verdict\": \"good\"}], \"score\": 7.5173, \"verdict\": \"good\"}]]} The RPC can return various errors: nl.itslanguage.alignment_failed If the alignment of the audio failed. nl.itslanguage.analysis_failed If the analysis of the audio failed. nl.itslanguage.no_such_organisation If the organisation doesn't exist. nl.itslanguage.no_such_challenge If the challenge doesn't exist.","title":"Response"},{"location":"websocket/speech_recording.html","text":"Speech Recording Storing speech recordings is split up into multiple RPCs. Below, the various RPCs are documented. Initialise a recording Initialise a speech recording, this RPC should be called for each new speech recording. A unique id is generated for a speech recording. This id is used in the other RPCs to identify the recording, URI nl.itslanguage.recording.init_recording Response The id of the new speech recording is returned as a string. Initialising audio for uploading The audio that is to be uploaded for analysis is streamed to the server. Some information is required in order for the server to be able to store the audio correctly. URI nl.itslanguage.recording.init_audio Parameters Name Type Description recording_id string Required The unique id of the speech recording. audio_format string Required The mimetype of the audio to upload. Depending on the audio_format , additional parameters may be required. Please see the audio documentation for which audio formats are supported and what parameters they require. Initialise recording challenge A challenge should be linked when storing the recording. This call verifies asynchronously that the challenge exists. If the challenge or the organisation doesn't exist, an error is raised. Since this happens asynchronously, the error is raised later. URI nl.itslanguage.recording.init_challenge Parameters Name Type Description recording_id string Required The unique id of the speech recording. organisation_id string Required The id of the organisation in which to find the challenge. challenge_id string Required The id of the challenge the recording is meant for. Stream recording audio The recorded audio can now be streamed to the server. The streaming works by repeatedly calling this RPC. Each time the RPC is called, the data will be appended to an audio file on the server. URI nl.itslanguage.recording.write Parameters Name Type Description recording_id string Required The unique id of the speech recording. data bytes Required The data to stream to the server. This can be any length. encoding string Optional The encoding in which the data is sent. This should be base64 if the data is base64 encoded. Close recording Close the recording and store it on the server. After this call, no data can be written to the recording any more. URI nl.itslanguage.recording.close Parameters Name Type Description recording_id string Required The unique id of the speech recording. The RPC can return various errors: nl.itslanguage.no_such_organisation If the organisation doesn't exist. nl.itslanguage.no_such_challenge If the challenge doesn't exist.","title":"Speech Recording"},{"location":"websocket/speech_recording.html#speech-recording","text":"Storing speech recordings is split up into multiple RPCs. Below, the various RPCs are documented.","title":"Speech Recording"},{"location":"websocket/speech_recording.html#initialise-a-recording","text":"Initialise a speech recording, this RPC should be called for each new speech recording. A unique id is generated for a speech recording. This id is used in the other RPCs to identify the recording,","title":"Initialise a recording"},{"location":"websocket/speech_recording.html#uri","text":"nl.itslanguage.recording.init_recording","title":"URI"},{"location":"websocket/speech_recording.html#response","text":"The id of the new speech recording is returned as a string.","title":"Response"},{"location":"websocket/speech_recording.html#initialising-audio-for-uploading","text":"The audio that is to be uploaded for analysis is streamed to the server. Some information is required in order for the server to be able to store the audio correctly.","title":"Initialising audio for uploading"},{"location":"websocket/speech_recording.html#uri_1","text":"nl.itslanguage.recording.init_audio","title":"URI"},{"location":"websocket/speech_recording.html#parameters","text":"Name Type Description recording_id string Required The unique id of the speech recording. audio_format string Required The mimetype of the audio to upload. Depending on the audio_format , additional parameters may be required. Please see the audio documentation for which audio formats are supported and what parameters they require.","title":"Parameters"},{"location":"websocket/speech_recording.html#initialise-recording-challenge","text":"A challenge should be linked when storing the recording. This call verifies asynchronously that the challenge exists. If the challenge or the organisation doesn't exist, an error is raised. Since this happens asynchronously, the error is raised later.","title":"Initialise recording challenge"},{"location":"websocket/speech_recording.html#uri_2","text":"nl.itslanguage.recording.init_challenge","title":"URI"},{"location":"websocket/speech_recording.html#parameters_1","text":"Name Type Description recording_id string Required The unique id of the speech recording. organisation_id string Required The id of the organisation in which to find the challenge. challenge_id string Required The id of the challenge the recording is meant for.","title":"Parameters"},{"location":"websocket/speech_recording.html#stream-recording-audio","text":"The recorded audio can now be streamed to the server. The streaming works by repeatedly calling this RPC. Each time the RPC is called, the data will be appended to an audio file on the server.","title":"Stream recording audio"},{"location":"websocket/speech_recording.html#uri_3","text":"nl.itslanguage.recording.write","title":"URI"},{"location":"websocket/speech_recording.html#parameters_2","text":"Name Type Description recording_id string Required The unique id of the speech recording. data bytes Required The data to stream to the server. This can be any length. encoding string Optional The encoding in which the data is sent. This should be base64 if the data is base64 encoded.","title":"Parameters"},{"location":"websocket/speech_recording.html#close-recording","text":"Close the recording and store it on the server. After this call, no data can be written to the recording any more.","title":"Close recording"},{"location":"websocket/speech_recording.html#uri_4","text":"nl.itslanguage.recording.close","title":"URI"},{"location":"websocket/speech_recording.html#parameters_3","text":"Name Type Description recording_id string Required The unique id of the speech recording. The RPC can return various errors: nl.itslanguage.no_such_organisation If the organisation doesn't exist. nl.itslanguage.no_such_challenge If the challenge doesn't exist.","title":"Parameters"},{"location":"websocket/wamp.html","text":"WAMP The websocket API is implemented using WAMP (Web Application Messaging Protocol). This allows for RPCs over websockets. To be able to use the websocket API, a WAMP client should be used. The recommended WAMP client is Autobahn since it's from the author of WAMP. Other implementations are also available. Register audio procedure To send audio, a WAMP procedure must be registered. Check your WAMP library's documentation on how to do this. Some are linked here: [Autobahn-js][1] [Autobahn|Python][2] The procedure must return [progressive results], check your library's documentation on how to implement this. Every progressive result is a chunk of the audio and so audio is sent in chunks. Later on, the server will call this procedure to 'pull' the audio in. When the procedure returns, the stream is finished/closed. Note that a complete (self-describing) audio file is expected, starting with a header. Check the audio documentation page to see more about supported formats. The procedure can best be registered to a randomly generated URI, using uuid4 for this is advisable to ensure uniqueness. For every audio a separate procedure must be registered. The URI is used later on. It is advisable to unregister the procedure when the streaming is finished. Warning Re-using a URI can result in conflicts.","title":"WAMP"},{"location":"websocket/wamp.html#wamp","text":"The websocket API is implemented using WAMP (Web Application Messaging Protocol). This allows for RPCs over websockets. To be able to use the websocket API, a WAMP client should be used. The recommended WAMP client is Autobahn since it's from the author of WAMP. Other implementations are also available.","title":"WAMP"},{"location":"websocket/wamp.html#register-audio-procedure","text":"To send audio, a WAMP procedure must be registered. Check your WAMP library's documentation on how to do this. Some are linked here: [Autobahn-js][1] [Autobahn|Python][2] The procedure must return [progressive results], check your library's documentation on how to implement this. Every progressive result is a chunk of the audio and so audio is sent in chunks. Later on, the server will call this procedure to 'pull' the audio in. When the procedure returns, the stream is finished/closed. Note that a complete (self-describing) audio file is expected, starting with a header. Check the audio documentation page to see more about supported formats. The procedure can best be registered to a randomly generated URI, using uuid4 for this is advisable to ensure uniqueness. For every audio a separate procedure must be registered. The URI is used later on. It is advisable to unregister the procedure when the streaming is finished. Warning Re-using a URI can result in conflicts.","title":"Register audio procedure"}]}